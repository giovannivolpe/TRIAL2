Search.setIndex({"alltitles": {"ActiveLearningCriterion": [[0, null]], "ActiveLearningDataset": [[1, null]], "Adam": [[76, null]], "AdamW": [[77, null]], "Add": [[39, null], [116, null]], "AddDict": [[40, null]], "Additional Notes": [[43, "additional-notes"], [44, "additional-notes"], [46, "additional-notes"]], "AdversarialStrategy": [[2, null]], "Application": [[16, null]], "AttentionUNet": [[41, null]], "Attributes": [[112, "attributes"]], "BackboneResnet18": [[92, null]], "BaseResidual": [[25, null]], "BinaryClassifier": [[17, null]], "Block": [[26, null]], "Callback": [[71, null]], "Cat": [[117, null]], "CategoricalClassifier": [[18, null]], "Classes": [[137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"]], "Classifier": [[19, null]], "CombineLayerActivation": [[42, null]], "Computed": [[129, null]], "Config": [[109, null]], "ConfigItem": [[110, null]], "ConfigItemList": [[111, null]], "Configurables": [[43, "configurables"], [44, "configurables"], [46, "configurables"], [56, "configurables"], [65, "configurables"], [98, "configurables"], [99, "configurables"], [100, "configurables"], [101, "configurables"], [103, "configurables"], [105, "configurables"], [107, "configurables"]], "Constant": [[3, null], [83, null]], "Constraints": [[40, "constraints"], [43, "constraints"], [44, "constraints"], [46, "constraints"], [95, "constraints"], [96, "constraints"], [97, "constraints"], [98, "constraints"], [99, "constraints"], [100, "constraints"], [101, "constraints"], [103, "constraints"], [107, "constraints"]], "Contents:": [[135, null], [136, null]], "Conv2dBlock": [[27, null]], "Conv2dResidual": [[28, null]], "ConvolutionalDecoder2d": [[43, null]], "ConvolutionalEncoder2d": [[44, null]], "ConvolutionalEncoderDecoder2d": [[45, null]], "ConvolutionalNeuralNetwork": [[46, null]], "CycleGANDiscriminator": [[93, null]], "CycleGANResnetGenerator": [[94, null]], "DCGANDiscriminator": [[95, null]], "DCGANGenerator": [[96, null]], "Deeplay documentation": [[135, null]], "DeeplayModule": [[112, null]], "DetachedConfigItem": [[113, null]], "Documentation": [[136, null]], "Entropy": [[4, null]], "Evaluation": [[43, "evaluation"], [44, "evaluation"], [46, "evaluation"], [56, "evaluation"], [65, "evaluation"]], "Example": [[112, "example"]], "Example Usage": [[16, "example-usage"], [26, "example-usage"], [29, "example-usage"], [30, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [35, "example-usage"], [36, "example-usage"], [41, "example-usage"], [42, "example-usage"], [43, "example-usage"], [44, "example-usage"], [46, "example-usage"], [48, "example-usage"], [50, "example-usage"], [54, "example-usage"], [56, "example-usage"], [60, "example-usage"], [61, "example-usage"], [64, "example-usage"], [65, "example-usage"], [78, "example-usage"], [78, "id10"], [78, "id12"], [79, "example-usage"], [86, "example-usage"], [94, "example-usage"], [105, "example-usage"], [112, "example-usage"], [112, "id15"], [112, "id22"], [112, "id24"], [112, "id26"], [112, "id32"], [112, "id38"]], "Examples": [[39, "examples"], [43, "examples"], [44, "examples"], [46, "examples"], [56, "examples"], [65, "examples"], [79, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [103, "examples"], [107, "examples"], [112, "examples"], [130, "examples"]], "ExtendedConstructorMeta": [[90, null]], "External": [[78, null]], "Flatten": [[118, null]], "FractionCriterion": [[5, null]], "FromDict": [[47, null]], "FromLogs": [[119, null]], "Functions": [[142, "functions"], [146, "functions"], [148, "functions"], [150, "functions"]], "GlobalMeanPool": [[97, null]], "GraphConvolutionalNeuralNetwork": [[48, null]], "GraphToEdgeMAGIK": [[98, null]], "GraphToEdgeMPM": [[99, null]], "GraphToGlobalMPM": [[100, null]], "GraphToNodeMPM": [[101, null]], "IndexedPositionalEmbedding": [[49, null]], "JointDataset": [[6, null]], "Kaiming": [[84, null]], "L1Upper": [[7, null]], "L2Upper": [[8, null]], "Lambda": [[120, null]], "LargeMLP": [[102, null]], "Layer": [[79, null]], "LayerActivation": [[29, null]], "LayerActivationNormalization": [[30, null]], "LayerActivationNormalizationDropout": [[31, null]], "LayerActivationNormalizationUpsample": [[32, null]], "LayerDropoutSkipNormalization": [[50, null]], "LayerList": [[86, null]], "LayerSkip": [[33, null]], "LearnableDistancewWeighting": [[51, null]], "LeastConfidence": [[9, null]], "LinearBlock": [[34, null]], "LodeSTAR": [[20, null]], "LogHistory": [[37, null]], "MPM": [[103, null]], "Margin": [[10, null]], "Max": [[52, null]], "Mean": [[53, null]], "MediumMLP": [[104, null]], "MergeOp": [[121, null]], "MessagePassingNeuralNetwork": [[54, null]], "Methods": [[105, "methods"], [112, "methods"]], "Min": [[55, null]], "MultiLabelClassifier": [[21, null]], "MultiLayerPerceptron": [[56, null]], "MultiheadCrossAttention": [[122, null]], "MultiheadSelfAttention": [[57, null], [123, null]], "Normal": [[85, null]], "Notes": [[105, "notes"]], "Optimizer": [[80, null]], "Parallel": [[87, null]], "Parameters": [[16, "parameters"], [16, "id5"], [16, "id12"], [20, "parameters"], [20, "id1"], [20, "id2"], [20, "id7"], [20, "id8"], [20, "id9"], [26, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [35, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [41, "id1"], [42, "parameters"], [43, "parameters"], [43, "id1"], [44, "parameters"], [44, "id1"], [46, "parameters"], [46, "id1"], [48, "parameters"], [50, "parameters"], [54, "parameters"], [56, "parameters"], [60, "parameters"], [61, "parameters"], [64, "parameters"], [65, "parameters"], [78, "parameters"], [78, "id5"], [79, "parameters"], [79, "id5"], [86, "parameters"], [93, "parameters"], [94, "parameters"], [94, "id1"], [95, "parameters"], [96, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [103, "parameters"], [105, "parameters"], [107, "parameters"], [112, "parameters"], [112, "id16"], [112, "id17"], [112, "id27"], [112, "id28"], [112, "id33"], [112, "id34"], [112, "id35"], [112, "id36"], [112, "id39"], [114, "parameters"], [114, "id1"], [114, "id3"], [130, "parameters"]], "Permute": [[124, null]], "PoolLayerActivationNormalization": [[35, null]], "PositionalEmbedding": [[58, null]], "Prod": [[59, null]], "ProductCriterion": [[11, null]], "Properties": [[105, "properties"]], "RMSprop": [[81, null]], "Raises": [[26, "raises"], [29, "raises"], [30, "raises"], [31, "raises"], [32, "raises"], [33, "raises"], [35, "raises"], [36, "raises"], [41, "raises"], [42, "raises"], [43, "raises"], [44, "raises"], [46, "raises"], [48, "raises"], [50, "raises"], [54, "raises"], [56, "raises"], [60, "raises"], [61, "raises"], [64, "raises"], [65, "raises"], [78, "raises"], [79, "raises"], [86, "raises"], [94, "raises"], [105, "raises"], [112, "raises"], [112, "id37"]], "RecurrentBlock": [[36, null]], "RecurrentModel": [[105, null]], "RecurrentNeuralNetwork": [[60, null]], "ReferringLayerList": [[88, null]], "Regressor": [[22, null]], "Reshape": [[125, null]], "ResidualMessagePassingNeuralNetwork": [[61, null]], "Return Values": [[43, "return-values"], [44, "return-values"], [46, "return-values"], [56, "return-values"], [65, "return-values"], [95, "return-values"], [96, "return-values"], [107, "return-values"]], "Return values": [[93, "return-values"], [94, "return-values"]], "Returns": [[16, "returns"], [78, "returns"], [78, "id11"], [112, "returns"], [112, "id23"], [112, "id25"], [112, "id31"], [114, "returns"], [114, "id2"], [114, "id4"], [130, "returns"]], "RichProgressBar": [[38, null]], "SGD": [[82, null]], "Selection": [[114, null]], "Sequential": [[89, null]], "Shorthands": [[56, "shorthands"], [65, "shorthands"], [94, "shorthands"], [95, "shorthands"], [96, "shorthands"]], "SmallMLP": [[106, null]], "Squeeze": [[126, null]], "Strategy": [[12, null]], "Sum": [[62, null]], "SumCriterion": [[13, null]], "Trainer": [[134, null]], "Transform": [[63, null]], "TransformPropagateUpdate": [[64, null]], "TransformerEncoderLayer": [[65, null]], "UNet2d": [[66, null]], "UncertaintyStrategy": [[14, null]], "UniformStrategy": [[15, null]], "Unsqueeze": [[127, null]], "Update": [[67, null]], "Variable": [[130, null]], "VariationalAutoEncoder": [[23, null]], "ViT": [[107, null]], "View": [[128, null]], "WassersteinAutoEncoder": [[24, null]], "WeightedSum": [[68, null]], "XLargeMLP": [[108, null]], "after_build": [[72, null]], "after_init": [[73, null]], "before_build": [[74, null]], "builder": [[115, null]], "deeplay.activelearning Package": [[137, null]], "deeplay.applications Package": [[138, null]], "deeplay.blocks Package": [[139, null]], "deeplay.callbacks Package": [[140, null]], "deeplay.components Package": [[141, null]], "deeplay.decorators Module": [[142, null]], "deeplay.external Package": [[143, null]], "deeplay.initializers Package": [[144, null]], "deeplay.list Module": [[145, null]], "deeplay.meta Module": [[146, null]], "deeplay.models Package": [[147, null]], "deeplay.module Module": [[148, null]], "deeplay.ops Package": [[149, null]], "deeplay.shapes Module": [[150, null]], "deeplay.trainer Module": [[151, null]], "dense_laplacian_normalization": [[69, null]], "not_top_level": [[91, null]], "reverse_two_operation": [[131, null]], "sparse_laplacian_normalization": [[70, null]], "stateful": [[75, null]], "two_operation": [[132, null]], "unary_operation": [[133, null]]}, "docnames": ["api/deeplay.activelearning.ActiveLearningCriterion", "api/deeplay.activelearning.ActiveLearningDataset", "api/deeplay.activelearning.AdversarialStrategy", "api/deeplay.activelearning.Constant", "api/deeplay.activelearning.Entropy", "api/deeplay.activelearning.FractionCriterion", "api/deeplay.activelearning.JointDataset", "api/deeplay.activelearning.L1Upper", "api/deeplay.activelearning.L2Upper", "api/deeplay.activelearning.LeastConfidence", "api/deeplay.activelearning.Margin", "api/deeplay.activelearning.ProductCriterion", "api/deeplay.activelearning.Strategy", "api/deeplay.activelearning.SumCriterion", "api/deeplay.activelearning.UncertaintyStrategy", "api/deeplay.activelearning.UniformStrategy", "api/deeplay.applications.Application", "api/deeplay.applications.BinaryClassifier", "api/deeplay.applications.CategoricalClassifier", "api/deeplay.applications.Classifier", "api/deeplay.applications.LodeSTAR", "api/deeplay.applications.MultiLabelClassifier", "api/deeplay.applications.Regressor", "api/deeplay.applications.VariationalAutoEncoder", "api/deeplay.applications.WassersteinAutoEncoder", "api/deeplay.blocks.BaseResidual", "api/deeplay.blocks.Block", "api/deeplay.blocks.Conv2dBlock", "api/deeplay.blocks.Conv2dResidual", "api/deeplay.blocks.LayerActivation", "api/deeplay.blocks.LayerActivationNormalization", "api/deeplay.blocks.LayerActivationNormalizationDropout", "api/deeplay.blocks.LayerActivationNormalizationUpsample", "api/deeplay.blocks.LayerSkip", "api/deeplay.blocks.LinearBlock", "api/deeplay.blocks.PoolLayerActivationNormalization", "api/deeplay.blocks.RecurrentBlock", "api/deeplay.callbacks.LogHistory", "api/deeplay.callbacks.RichProgressBar", "api/deeplay.components.Add", "api/deeplay.components.AddDict", "api/deeplay.components.AttentionUNet", "api/deeplay.components.CombineLayerActivation", "api/deeplay.components.ConvolutionalDecoder2d", "api/deeplay.components.ConvolutionalEncoder2d", "api/deeplay.components.ConvolutionalEncoderDecoder2d", "api/deeplay.components.ConvolutionalNeuralNetwork", "api/deeplay.components.FromDict", "api/deeplay.components.GraphConvolutionalNeuralNetwork", "api/deeplay.components.IndexedPositionalEmbedding", "api/deeplay.components.LayerDropoutSkipNormalization", "api/deeplay.components.LearnableDistancewWeighting", "api/deeplay.components.Max", "api/deeplay.components.Mean", "api/deeplay.components.MessagePassingNeuralNetwork", "api/deeplay.components.Min", "api/deeplay.components.MultiLayerPerceptron", "api/deeplay.components.MultiheadSelfAttention", "api/deeplay.components.PositionalEmbedding", "api/deeplay.components.Prod", "api/deeplay.components.RecurrentNeuralNetwork", "api/deeplay.components.ResidualMessagePassingNeuralNetwork", "api/deeplay.components.Sum", "api/deeplay.components.Transform", "api/deeplay.components.TransformPropagateUpdate", "api/deeplay.components.TransformerEncoderLayer", "api/deeplay.components.UNet2d", "api/deeplay.components.Update", "api/deeplay.components.WeightedSum", "api/deeplay.components.dense_laplacian_normalization", "api/deeplay.components.sparse_laplacian_normalization", "api/deeplay.decorators.Callback", "api/deeplay.decorators.after_build", "api/deeplay.decorators.after_init", "api/deeplay.decorators.before_build", "api/deeplay.decorators.stateful", "api/deeplay.external.Adam", "api/deeplay.external.AdamW", "api/deeplay.external.External", "api/deeplay.external.Layer", "api/deeplay.external.Optimizer", "api/deeplay.external.RMSprop", "api/deeplay.external.SGD", "api/deeplay.initializers.Constant", "api/deeplay.initializers.Kaiming", "api/deeplay.initializers.Normal", "api/deeplay.list.LayerList", "api/deeplay.list.Parallel", "api/deeplay.list.ReferringLayerList", "api/deeplay.list.Sequential", "api/deeplay.meta.ExtendedConstructorMeta", "api/deeplay.meta.not_top_level", "api/deeplay.models.BackboneResnet18", "api/deeplay.models.CycleGANDiscriminator", "api/deeplay.models.CycleGANResnetGenerator", "api/deeplay.models.DCGANDiscriminator", "api/deeplay.models.DCGANGenerator", "api/deeplay.models.GlobalMeanPool", "api/deeplay.models.GraphToEdgeMAGIK", "api/deeplay.models.GraphToEdgeMPM", "api/deeplay.models.GraphToGlobalMPM", "api/deeplay.models.GraphToNodeMPM", "api/deeplay.models.LargeMLP", "api/deeplay.models.MPM", "api/deeplay.models.MediumMLP", "api/deeplay.models.RecurrentModel", "api/deeplay.models.SmallMLP", "api/deeplay.models.ViT", "api/deeplay.models.XLargeMLP", "api/deeplay.module.Config", "api/deeplay.module.ConfigItem", "api/deeplay.module.ConfigItemList", "api/deeplay.module.DeeplayModule", "api/deeplay.module.DetachedConfigItem", "api/deeplay.module.Selection", "api/deeplay.module.builder", "api/deeplay.ops.Add", "api/deeplay.ops.Cat", "api/deeplay.ops.Flatten", "api/deeplay.ops.FromLogs", "api/deeplay.ops.Lambda", "api/deeplay.ops.MergeOp", "api/deeplay.ops.MultiheadCrossAttention", "api/deeplay.ops.MultiheadSelfAttention", "api/deeplay.ops.Permute", "api/deeplay.ops.Reshape", "api/deeplay.ops.Squeeze", "api/deeplay.ops.Unsqueeze", "api/deeplay.ops.View", "api/deeplay.shapes.Computed", "api/deeplay.shapes.Variable", "api/deeplay.shapes.reverse_two_operation", "api/deeplay.shapes.two_operation", "api/deeplay.shapes.unary_operation", "api/deeplay.trainer.Trainer", "index", "src/Documentation", "src/activelearning", "src/applications", "src/blocks", "src/callbacks", "src/components", "src/decorators", "src/external", "src/initializers", "src/list", "src/meta", "src/models", "src/module", "src/ops", "src/shapes", "src/trainer"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/deeplay.activelearning.ActiveLearningCriterion.rst", "api/deeplay.activelearning.ActiveLearningDataset.rst", "api/deeplay.activelearning.AdversarialStrategy.rst", "api/deeplay.activelearning.Constant.rst", "api/deeplay.activelearning.Entropy.rst", "api/deeplay.activelearning.FractionCriterion.rst", "api/deeplay.activelearning.JointDataset.rst", "api/deeplay.activelearning.L1Upper.rst", "api/deeplay.activelearning.L2Upper.rst", "api/deeplay.activelearning.LeastConfidence.rst", "api/deeplay.activelearning.Margin.rst", "api/deeplay.activelearning.ProductCriterion.rst", "api/deeplay.activelearning.Strategy.rst", "api/deeplay.activelearning.SumCriterion.rst", "api/deeplay.activelearning.UncertaintyStrategy.rst", "api/deeplay.activelearning.UniformStrategy.rst", "api/deeplay.applications.Application.rst", "api/deeplay.applications.BinaryClassifier.rst", "api/deeplay.applications.CategoricalClassifier.rst", "api/deeplay.applications.Classifier.rst", "api/deeplay.applications.LodeSTAR.rst", "api/deeplay.applications.MultiLabelClassifier.rst", "api/deeplay.applications.Regressor.rst", "api/deeplay.applications.VariationalAutoEncoder.rst", "api/deeplay.applications.WassersteinAutoEncoder.rst", "api/deeplay.blocks.BaseResidual.rst", "api/deeplay.blocks.Block.rst", "api/deeplay.blocks.Conv2dBlock.rst", "api/deeplay.blocks.Conv2dResidual.rst", "api/deeplay.blocks.LayerActivation.rst", "api/deeplay.blocks.LayerActivationNormalization.rst", "api/deeplay.blocks.LayerActivationNormalizationDropout.rst", "api/deeplay.blocks.LayerActivationNormalizationUpsample.rst", "api/deeplay.blocks.LayerSkip.rst", "api/deeplay.blocks.LinearBlock.rst", "api/deeplay.blocks.PoolLayerActivationNormalization.rst", "api/deeplay.blocks.RecurrentBlock.rst", "api/deeplay.callbacks.LogHistory.rst", "api/deeplay.callbacks.RichProgressBar.rst", "api/deeplay.components.Add.rst", "api/deeplay.components.AddDict.rst", "api/deeplay.components.AttentionUNet.rst", "api/deeplay.components.CombineLayerActivation.rst", "api/deeplay.components.ConvolutionalDecoder2d.rst", "api/deeplay.components.ConvolutionalEncoder2d.rst", "api/deeplay.components.ConvolutionalEncoderDecoder2d.rst", "api/deeplay.components.ConvolutionalNeuralNetwork.rst", "api/deeplay.components.FromDict.rst", "api/deeplay.components.GraphConvolutionalNeuralNetwork.rst", "api/deeplay.components.IndexedPositionalEmbedding.rst", "api/deeplay.components.LayerDropoutSkipNormalization.rst", "api/deeplay.components.LearnableDistancewWeighting.rst", "api/deeplay.components.Max.rst", "api/deeplay.components.Mean.rst", "api/deeplay.components.MessagePassingNeuralNetwork.rst", "api/deeplay.components.Min.rst", "api/deeplay.components.MultiLayerPerceptron.rst", "api/deeplay.components.MultiheadSelfAttention.rst", "api/deeplay.components.PositionalEmbedding.rst", "api/deeplay.components.Prod.rst", "api/deeplay.components.RecurrentNeuralNetwork.rst", "api/deeplay.components.ResidualMessagePassingNeuralNetwork.rst", "api/deeplay.components.Sum.rst", "api/deeplay.components.Transform.rst", "api/deeplay.components.TransformPropagateUpdate.rst", "api/deeplay.components.TransformerEncoderLayer.rst", "api/deeplay.components.UNet2d.rst", "api/deeplay.components.Update.rst", "api/deeplay.components.WeightedSum.rst", "api/deeplay.components.dense_laplacian_normalization.rst", "api/deeplay.components.sparse_laplacian_normalization.rst", "api/deeplay.decorators.Callback.rst", "api/deeplay.decorators.after_build.rst", "api/deeplay.decorators.after_init.rst", "api/deeplay.decorators.before_build.rst", "api/deeplay.decorators.stateful.rst", "api/deeplay.external.Adam.rst", "api/deeplay.external.AdamW.rst", "api/deeplay.external.External.rst", "api/deeplay.external.Layer.rst", "api/deeplay.external.Optimizer.rst", "api/deeplay.external.RMSprop.rst", "api/deeplay.external.SGD.rst", "api/deeplay.initializers.Constant.rst", "api/deeplay.initializers.Kaiming.rst", "api/deeplay.initializers.Normal.rst", "api/deeplay.list.LayerList.rst", "api/deeplay.list.Parallel.rst", "api/deeplay.list.ReferringLayerList.rst", "api/deeplay.list.Sequential.rst", "api/deeplay.meta.ExtendedConstructorMeta.rst", "api/deeplay.meta.not_top_level.rst", "api/deeplay.models.BackboneResnet18.rst", "api/deeplay.models.CycleGANDiscriminator.rst", "api/deeplay.models.CycleGANResnetGenerator.rst", "api/deeplay.models.DCGANDiscriminator.rst", "api/deeplay.models.DCGANGenerator.rst", "api/deeplay.models.GlobalMeanPool.rst", "api/deeplay.models.GraphToEdgeMAGIK.rst", "api/deeplay.models.GraphToEdgeMPM.rst", "api/deeplay.models.GraphToGlobalMPM.rst", "api/deeplay.models.GraphToNodeMPM.rst", "api/deeplay.models.LargeMLP.rst", "api/deeplay.models.MPM.rst", "api/deeplay.models.MediumMLP.rst", "api/deeplay.models.RecurrentModel.rst", "api/deeplay.models.SmallMLP.rst", "api/deeplay.models.ViT.rst", "api/deeplay.models.XLargeMLP.rst", "api/deeplay.module.Config.rst", "api/deeplay.module.ConfigItem.rst", "api/deeplay.module.ConfigItemList.rst", "api/deeplay.module.DeeplayModule.rst", "api/deeplay.module.DetachedConfigItem.rst", "api/deeplay.module.Selection.rst", "api/deeplay.module.builder.rst", "api/deeplay.ops.Add.rst", "api/deeplay.ops.Cat.rst", "api/deeplay.ops.Flatten.rst", "api/deeplay.ops.FromLogs.rst", "api/deeplay.ops.Lambda.rst", "api/deeplay.ops.MergeOp.rst", "api/deeplay.ops.MultiheadCrossAttention.rst", "api/deeplay.ops.MultiheadSelfAttention.rst", "api/deeplay.ops.Permute.rst", "api/deeplay.ops.Reshape.rst", "api/deeplay.ops.Squeeze.rst", "api/deeplay.ops.Unsqueeze.rst", "api/deeplay.ops.View.rst", "api/deeplay.shapes.Computed.rst", "api/deeplay.shapes.Variable.rst", "api/deeplay.shapes.reverse_two_operation.rst", "api/deeplay.shapes.two_operation.rst", "api/deeplay.shapes.unary_operation.rst", "api/deeplay.trainer.Trainer.rst", "index.rst", "src/Documentation.rst", "src/activelearning.rst", "src/applications.rst", "src/blocks.rst", "src/callbacks.rst", "src/components.rst", "src/decorators.rst", "src/external.rst", "src/initializers.rst", "src/list.rst", "src/meta.rst", "src/models.rst", "src/module.rst", "src/ops.rst", "src/shapes.rst", "src/trainer.rst"], "indexentries": {"__call__() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.__call__", false]], "__call__() (deeplay.decorators.callback method)": [[71, "deeplay.decorators.Callback.__call__", false]], "__call__() (deeplay.list.referringlayerlist method)": [[88, "deeplay.list.ReferringLayerList.__call__", false]], "__call__() (deeplay.meta.extendedconstructormeta method)": [[90, "deeplay.meta.ExtendedConstructorMeta.__call__", false]], "__call__() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.__call__", false]], "__call__() (deeplay.shapes.computed method)": [[129, "deeplay.shapes.Computed.__call__", false]], "__call__() (deeplay.shapes.variable method)": [[130, "deeplay.shapes.Variable.__call__", false]], "activation (deeplay.components.convolutionalneuralnetwork attribute)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.activation", false]], "activation (deeplay.components.multilayerperceptron attribute)": [[56, "deeplay.components.MultiLayerPerceptron.activation", false]], "activation (deeplay.components.recurrentneuralnetwork attribute)": [[60, "deeplay.components.RecurrentNeuralNetwork.activation", false]], "activation (deeplay.models.recurrentmodel attribute)": [[105, "deeplay.models.RecurrentModel.activation", false]], "activelearningcriterion (class in deeplay.activelearning)": [[0, "deeplay.activelearning.ActiveLearningCriterion", false]], "activelearningdataset (class in deeplay.activelearning)": [[1, "deeplay.activelearning.ActiveLearningDataset", false]], "adam (class in deeplay.external)": [[76, "deeplay.external.Adam", false]], "adamw (class in deeplay.external)": [[77, "deeplay.external.AdamW", false]], "add (class in deeplay.components)": [[39, "deeplay.components.Add", false]], "add (class in deeplay.ops)": [[116, "deeplay.ops.Add", false]], "add_detached_configuration() (deeplay.module.config method)": [[109, "deeplay.module.Config.add_detached_configuration", false]], "add_self_loops() (deeplay.components.sparse_laplacian_normalization method)": [[70, "deeplay.components.sparse_laplacian_normalization.add_self_loops", false]], "adddict (class in deeplay.components)": [[40, "deeplay.components.AddDict", false]], "adversarialstrategy (class in deeplay.activelearning)": [[2, "deeplay.activelearning.AdversarialStrategy", false]], "after_build() (in module deeplay.decorators)": [[72, "deeplay.decorators.after_build", false]], "after_init() (in module deeplay.decorators)": [[73, "deeplay.decorators.after_init", false]], "annotate() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.annotate", false]], "annotate_random() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.annotate_random", false]], "append() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.append", false]], "append() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.append", false]], "append_dropout() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.append_dropout", false]], "application (class in deeplay.applications)": [[16, "deeplay.applications.Application", false]], "assert_not_positional_only_and_variadic() (deeplay.external.external method)": [[78, "deeplay.external.External.assert_not_positional_only_and_variadic", false]], "attentionunet (class in deeplay.components)": [[41, "deeplay.components.AttentionUNet", false]], "available_styles() (deeplay.module.deeplaymodule class method)": [[112, "deeplay.module.DeeplayModule.available_styles", false]], "backboneresnet18 (class in deeplay.models)": [[92, "deeplay.models.BackboneResnet18", false]], "baseresidual (class in deeplay.blocks)": [[25, "deeplay.blocks.BaseResidual", false]], "before_build() (in module deeplay.decorators)": [[74, "deeplay.decorators.before_build", false]], "bidirectional() (deeplay.components.recurrentneuralnetwork method)": [[60, "deeplay.components.RecurrentNeuralNetwork.bidirectional", false]], "binaryclassifier (class in deeplay.applications)": [[17, "deeplay.applications.BinaryClassifier", false]], "block (class in deeplay.blocks)": [[26, "deeplay.blocks.Block", false]], "blocks (deeplay.components.convolutionalencoderdecoder2d attribute)": [[45, "deeplay.components.ConvolutionalEncoderDecoder2d.blocks", false]], "build() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.build", false]], "build() (deeplay.external.external method)": [[78, "deeplay.external.External.build", false]], "build() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.build", false]], "build_arguments_from() (deeplay.external.external method)": [[78, "deeplay.external.External.build_arguments_from", false]], "builder() (in module deeplay.module)": [[115, "deeplay.module.builder", false]], "call_with_dummy_data() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.call_with_dummy_data", false]], "call_with_dummy_data() (deeplay.blocks.linearblock method)": [[34, "deeplay.blocks.LinearBlock.call_with_dummy_data", false]], "callback (class in deeplay.decorators)": [[71, "deeplay.decorators.Callback", false]], "calling_stateful() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.calling_stateful", false]], "cat (class in deeplay.ops)": [[117, "deeplay.ops.Cat", false]], "categoricalclassifier (class in deeplay.applications)": [[18, "deeplay.applications.CategoricalClassifier", false]], "channel (deeplay.components.convolutionalencoder2d attribute)": [[44, "deeplay.components.ConvolutionalEncoder2d.channel", false]], "classifier (class in deeplay.applications)": [[19, "deeplay.applications.Classifier", false]], "clone_metrics() (deeplay.applications.application static method)": [[16, "deeplay.applications.Application.clone_metrics", false]], "combinelayeractivation (class in deeplay.components)": [[42, "deeplay.components.CombineLayerActivation", false]], "compute_imq() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.compute_IMQ", false]], "compute_kernel() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.compute_kernel", false]], "compute_loss() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.compute_loss", false]], "compute_loss() (deeplay.applications.binaryclassifier method)": [[17, "deeplay.applications.BinaryClassifier.compute_loss", false]], "compute_loss() (deeplay.applications.categoricalclassifier method)": [[18, "deeplay.applications.CategoricalClassifier.compute_loss", false]], "compute_loss() (deeplay.applications.classifier method)": [[19, "deeplay.applications.Classifier.compute_loss", false]], "compute_loss() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.compute_loss", false]], "compute_loss() (deeplay.applications.multilabelclassifier method)": [[21, "deeplay.applications.MultiLabelClassifier.compute_loss", false]], "compute_loss() (deeplay.applications.variationalautoencoder method)": [[23, "deeplay.applications.VariationalAutoEncoder.compute_loss", false]], "compute_loss() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.compute_loss", false]], "compute_mmd() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.compute_mmd", false]], "computed (class in deeplay.shapes)": [[129, "deeplay.shapes.Computed", false]], "computed() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.computed", false]], "config (class in deeplay.module)": [[109, "deeplay.module.Config", false]], "configitem (class in deeplay.module)": [[110, "deeplay.module.ConfigItem", false]], "configitemlist (class in deeplay.module)": [[111, "deeplay.module.ConfigItemList", false]], "configurables (deeplay.blocks.block attribute)": [[26, "deeplay.blocks.Block.configurables", false]], "configurables (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.configurables", false]], "configure() (deeplay.blocks.block method)": [[26, "deeplay.blocks.Block.configure", false]], "configure() (deeplay.blocks.layeractivation method)": [[29, "deeplay.blocks.LayerActivation.configure", false]], "configure() (deeplay.blocks.layeractivationnormalization method)": [[30, "deeplay.blocks.LayerActivationNormalization.configure", false]], "configure() (deeplay.blocks.layeractivationnormalizationdropout method)": [[31, "deeplay.blocks.LayerActivationNormalizationDropout.configure", false]], "configure() (deeplay.blocks.layeractivationnormalizationupsample method)": [[32, "deeplay.blocks.LayerActivationNormalizationUpsample.configure", false]], "configure() (deeplay.blocks.layerskip method)": [[33, "deeplay.blocks.LayerSkip.configure", false]], "configure() (deeplay.blocks.poollayeractivationnormalization method)": [[35, "deeplay.blocks.PoolLayerActivationNormalization.configure", false]], "configure() (deeplay.blocks.recurrentblock method)": [[36, "deeplay.blocks.RecurrentBlock.configure", false]], "configure() (deeplay.components.attentionunet method)": [[41, "deeplay.components.AttentionUNet.configure", false]], "configure() (deeplay.components.combinelayeractivation method)": [[42, "deeplay.components.CombineLayerActivation.configure", false]], "configure() (deeplay.components.convolutionaldecoder2d method)": [[43, "deeplay.components.ConvolutionalDecoder2d.configure", false]], "configure() (deeplay.components.convolutionalencoder2d method)": [[44, "deeplay.components.ConvolutionalEncoder2d.configure", false]], "configure() (deeplay.components.convolutionalneuralnetwork method)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.configure", false]], "configure() (deeplay.components.graphconvolutionalneuralnetwork method)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.configure", false]], "configure() (deeplay.components.layerdropoutskipnormalization method)": [[50, "deeplay.components.LayerDropoutSkipNormalization.configure", false]], "configure() (deeplay.components.messagepassingneuralnetwork method)": [[54, "deeplay.components.MessagePassingNeuralNetwork.configure", false]], "configure() (deeplay.components.multilayerperceptron method)": [[56, "deeplay.components.MultiLayerPerceptron.configure", false]], "configure() (deeplay.components.recurrentneuralnetwork method)": [[60, "deeplay.components.RecurrentNeuralNetwork.configure", false]], "configure() (deeplay.components.residualmessagepassingneuralnetwork method)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.configure", false]], "configure() (deeplay.components.transformerencoderlayer method)": [[65, "deeplay.components.TransformerEncoderLayer.configure", false]], "configure() (deeplay.components.transformpropagateupdate method)": [[64, "deeplay.components.TransformPropagateUpdate.configure", false]], "configure() (deeplay.components.unet2d method)": [[66, "deeplay.components.UNet2d.configure", false]], "configure() (deeplay.external.external method)": [[78, "deeplay.external.External.configure", false]], "configure() (deeplay.external.layer method)": [[79, "deeplay.external.Layer.configure", false]], "configure() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.configure", false]], "configure() (deeplay.models.cycleganresnetgenerator method)": [[94, "deeplay.models.CycleGANResnetGenerator.configure", false]], "configure() (deeplay.models.recurrentmodel method)": [[105, "deeplay.models.RecurrentModel.configure", false]], "configure() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.configure", false]], "configure() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.configure", false]], "configure_optimizers() (deeplay.activelearning.adversarialstrategy method)": [[2, "deeplay.activelearning.AdversarialStrategy.configure_optimizers", false]], "configure_optimizers() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.configure_optimizers", false]], "constant (class in deeplay.activelearning)": [[3, "deeplay.activelearning.Constant", false]], "constant (class in deeplay.initializers)": [[83, "deeplay.initializers.Constant", false]], "conv2dblock (class in deeplay.blocks)": [[27, "deeplay.blocks.Conv2dBlock", false]], "conv2dresidual (class in deeplay.blocks)": [[28, "deeplay.blocks.Conv2dResidual", false]], "convolutionaldecoder2d (class in deeplay.components)": [[43, "deeplay.components.ConvolutionalDecoder2d", false]], "convolutionalencoder2d (class in deeplay.components)": [[44, "deeplay.components.ConvolutionalEncoder2d", false]], "convolutionalencoderdecoder2d (class in deeplay.components)": [[45, "deeplay.components.ConvolutionalEncoderDecoder2d", false]], "convolutionalneuralnetwork (class in deeplay.components)": [[46, "deeplay.components.ConvolutionalNeuralNetwork", false]], "create() (deeplay.external.external method)": [[78, "deeplay.external.External.create", false]], "create() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.create", false]], "create_data() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.create_data", false]], "create_optimizer_with_params() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.create_optimizer_with_params", false]], "cyclegandiscriminator (class in deeplay.models)": [[93, "deeplay.models.CycleGANDiscriminator", false]], "cycleganresnetgenerator (class in deeplay.models)": [[94, "deeplay.models.CycleGANResnetGenerator", false]], "dcgandiscriminator (class in deeplay.models)": [[95, "deeplay.models.DCGANDiscriminator", false]], "dcgangenerator (class in deeplay.models)": [[96, "deeplay.models.DCGANGenerator", false]], "decode() (deeplay.applications.variationalautoencoder method)": [[23, "deeplay.applications.VariationalAutoEncoder.decode", false]], "decode() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.decode", false]], "deeplay.activelearning": [[137, "module-deeplay.activelearning", false]], "deeplay.applications": [[138, "module-deeplay.applications", false]], "deeplay.blocks": [[139, "module-deeplay.blocks", false]], "deeplay.callbacks": [[140, "module-deeplay.callbacks", false]], "deeplay.components": [[141, "module-deeplay.components", false]], "deeplay.decorators": [[142, "module-deeplay.decorators", false]], "deeplay.external": [[143, "module-deeplay.external", false]], "deeplay.initializers": [[144, "module-deeplay.initializers", false]], "deeplay.list": [[145, "module-deeplay.list", false]], "deeplay.meta": [[146, "module-deeplay.meta", false]], "deeplay.models": [[147, "module-deeplay.models", false]], "deeplay.module": [[148, "module-deeplay.module", false]], "deeplay.ops": [[149, "module-deeplay.ops", false]], "deeplay.shapes": [[150, "module-deeplay.shapes", false]], "deeplay.trainer": [[151, "module-deeplay.trainer", false]], "deeplaymodule (class in deeplay.module)": [[112, "deeplay.module.DeeplayModule", false]], "degree() (deeplay.components.dense_laplacian_normalization method)": [[69, "deeplay.components.dense_laplacian_normalization.degree", false]], "degree() (deeplay.components.sparse_laplacian_normalization method)": [[70, "deeplay.components.sparse_laplacian_normalization.degree", false]], "dense_laplacian_normalization (class in deeplay.components)": [[69, "deeplay.components.dense_laplacian_normalization", false]], "detachedconfigitem (class in deeplay.module)": [[113, "deeplay.module.DetachedConfigItem", false]], "detect() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.detect", false]], "detect_single() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.detect_single", false]], "device (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.device", false]], "disable_history() (deeplay.trainer.trainer method)": [[134, "deeplay.trainer.Trainer.disable_history", false]], "dropout (deeplay.components.multilayerperceptron attribute)": [[56, "deeplay.components.MultiLayerPerceptron.dropout", false]], "dropout (deeplay.components.recurrentneuralnetwork attribute)": [[60, "deeplay.components.RecurrentNeuralNetwork.dropout", false]], "dropout (deeplay.models.recurrentmodel attribute)": [[105, "deeplay.models.RecurrentModel.dropout", false]], "dtype (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.dtype", false]], "encode() (deeplay.applications.variationalautoencoder method)": [[23, "deeplay.applications.VariationalAutoEncoder.encode", false]], "encode() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.encode", false]], "entropy (class in deeplay.activelearning)": [[4, "deeplay.activelearning.Entropy", false]], "expected_input_shape (deeplay.blocks.conv2dblock attribute)": [[27, "deeplay.blocks.Conv2dBlock.expected_input_shape", false]], "extend() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.extend", false]], "extendedconstructormeta (class in deeplay.meta)": [[90, "deeplay.meta.ExtendedConstructorMeta", false]], "external (class in deeplay.external)": [[78, "deeplay.external.External", false]], "extra_repr() (deeplay.components.fromdict method)": [[47, "deeplay.components.FromDict.extra_repr", false]], "extra_repr() (deeplay.components.learnabledistancewweighting method)": [[51, "deeplay.components.LearnableDistancewWeighting.extra_repr", false]], "feed_forward (deeplay.components.transformerencoderlayer attribute)": [[65, "deeplay.components.TransformerEncoderLayer.feed_forward", false]], "fetch_embeddings() (deeplay.components.indexedpositionalembedding method)": [[49, "deeplay.components.IndexedPositionalEmbedding.fetch_embeddings", false]], "filter() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.filter", false]], "find_local_maxima() (deeplay.applications.lodestar static method)": [[20, "deeplay.applications.LodeSTAR.find_local_maxima", false]], "fit() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.fit", false]], "flatten (class in deeplay.ops)": [[118, "deeplay.ops.Flatten", false]], "forward() (deeplay.activelearning.adversarialstrategy method)": [[2, "deeplay.activelearning.AdversarialStrategy.forward", false]], "forward() (deeplay.activelearning.uncertaintystrategy method)": [[14, "deeplay.activelearning.UncertaintyStrategy.forward", false]], "forward() (deeplay.activelearning.uniformstrategy method)": [[15, "deeplay.activelearning.UniformStrategy.forward", false]], "forward() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.forward", false]], "forward() (deeplay.applications.binaryclassifier method)": [[17, "deeplay.applications.BinaryClassifier.forward", false]], "forward() (deeplay.applications.categoricalclassifier method)": [[18, "deeplay.applications.CategoricalClassifier.forward", false]], "forward() (deeplay.applications.classifier method)": [[19, "deeplay.applications.Classifier.forward", false]], "forward() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.forward", false]], "forward() (deeplay.applications.multilabelclassifier method)": [[21, "deeplay.applications.MultiLabelClassifier.forward", false]], "forward() (deeplay.applications.regressor method)": [[22, "deeplay.applications.Regressor.forward", false]], "forward() (deeplay.applications.variationalautoencoder method)": [[23, "deeplay.applications.VariationalAutoEncoder.forward", false]], "forward() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.forward", false]], "forward() (deeplay.blocks.baseresidual method)": [[25, "deeplay.blocks.BaseResidual.forward", false]], "forward() (deeplay.blocks.layerskip method)": [[33, "deeplay.blocks.LayerSkip.forward", false]], "forward() (deeplay.components.add method)": [[39, "deeplay.components.Add.forward", false]], "forward() (deeplay.components.adddict method)": [[40, "deeplay.components.AddDict.forward", false]], "forward() (deeplay.components.attentionunet method)": [[41, "deeplay.components.AttentionUNet.forward", false]], "forward() (deeplay.components.combinelayeractivation method)": [[42, "deeplay.components.CombineLayerActivation.forward", false]], "forward() (deeplay.components.convolutionaldecoder2d method)": [[43, "deeplay.components.ConvolutionalDecoder2d.forward", false]], "forward() (deeplay.components.convolutionalencoder2d method)": [[44, "deeplay.components.ConvolutionalEncoder2d.forward", false]], "forward() (deeplay.components.convolutionalencoderdecoder2d method)": [[45, "deeplay.components.ConvolutionalEncoderDecoder2d.forward", false]], "forward() (deeplay.components.convolutionalneuralnetwork method)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.forward", false]], "forward() (deeplay.components.dense_laplacian_normalization method)": [[69, "deeplay.components.dense_laplacian_normalization.forward", false]], "forward() (deeplay.components.fromdict method)": [[47, "deeplay.components.FromDict.forward", false]], "forward() (deeplay.components.graphconvolutionalneuralnetwork method)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.forward", false]], "forward() (deeplay.components.indexedpositionalembedding method)": [[49, "deeplay.components.IndexedPositionalEmbedding.forward", false]], "forward() (deeplay.components.layerdropoutskipnormalization method)": [[50, "deeplay.components.LayerDropoutSkipNormalization.forward", false]], "forward() (deeplay.components.learnabledistancewweighting method)": [[51, "deeplay.components.LearnableDistancewWeighting.forward", false]], "forward() (deeplay.components.max method)": [[52, "deeplay.components.Max.forward", false]], "forward() (deeplay.components.mean method)": [[53, "deeplay.components.Mean.forward", false]], "forward() (deeplay.components.messagepassingneuralnetwork method)": [[54, "deeplay.components.MessagePassingNeuralNetwork.forward", false]], "forward() (deeplay.components.min method)": [[55, "deeplay.components.Min.forward", false]], "forward() (deeplay.components.multiheadselfattention method)": [[57, "deeplay.components.MultiheadSelfAttention.forward", false]], "forward() (deeplay.components.multilayerperceptron method)": [[56, "deeplay.components.MultiLayerPerceptron.forward", false]], "forward() (deeplay.components.positionalembedding method)": [[58, "deeplay.components.PositionalEmbedding.forward", false]], "forward() (deeplay.components.prod method)": [[59, "deeplay.components.Prod.forward", false]], "forward() (deeplay.components.recurrentneuralnetwork method)": [[60, "deeplay.components.RecurrentNeuralNetwork.forward", false]], "forward() (deeplay.components.residualmessagepassingneuralnetwork method)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.forward", false]], "forward() (deeplay.components.sparse_laplacian_normalization method)": [[70, "deeplay.components.sparse_laplacian_normalization.forward", false]], "forward() (deeplay.components.sum method)": [[62, "deeplay.components.Sum.forward", false]], "forward() (deeplay.components.transformerencoderlayer method)": [[65, "deeplay.components.TransformerEncoderLayer.forward", false]], "forward() (deeplay.components.unet2d method)": [[66, "deeplay.components.UNet2d.forward", false]], "forward() (deeplay.components.weightedsum method)": [[68, "deeplay.components.WeightedSum.forward", false]], "forward() (deeplay.external.layer method)": [[79, "deeplay.external.Layer.forward", false]], "forward() (deeplay.list.parallel method)": [[87, "deeplay.list.Parallel.forward", false]], "forward() (deeplay.list.sequential method)": [[89, "deeplay.list.Sequential.forward", false]], "forward() (deeplay.models.backboneresnet18 method)": [[92, "deeplay.models.BackboneResnet18.forward", false]], "forward() (deeplay.models.cycleganresnetgenerator method)": [[94, "deeplay.models.CycleGANResnetGenerator.forward", false]], "forward() (deeplay.models.dcgandiscriminator method)": [[95, "deeplay.models.DCGANDiscriminator.forward", false]], "forward() (deeplay.models.dcgangenerator method)": [[96, "deeplay.models.DCGANGenerator.forward", false]], "forward() (deeplay.models.globalmeanpool method)": [[97, "deeplay.models.GlobalMeanPool.forward", false]], "forward() (deeplay.models.mpm method)": [[103, "deeplay.models.MPM.forward", false]], "forward() (deeplay.models.recurrentmodel method)": [[105, "deeplay.models.RecurrentModel.forward", false]], "forward() (deeplay.models.vit method)": [[107, "deeplay.models.ViT.forward", false]], "forward() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.forward", false]], "forward() (deeplay.ops.add method)": [[116, "deeplay.ops.Add.forward", false]], "forward() (deeplay.ops.cat method)": [[117, "deeplay.ops.Cat.forward", false]], "forward() (deeplay.ops.flatten method)": [[118, "deeplay.ops.Flatten.forward", false]], "forward() (deeplay.ops.fromlogs method)": [[119, "deeplay.ops.FromLogs.forward", false]], "forward() (deeplay.ops.lambda method)": [[120, "deeplay.ops.Lambda.forward", false]], "forward() (deeplay.ops.mergeop method)": [[121, "deeplay.ops.MergeOp.forward", false]], "forward() (deeplay.ops.multiheadcrossattention method)": [[122, "deeplay.ops.MultiheadCrossAttention.forward", false]], "forward() (deeplay.ops.multiheadselfattention method)": [[123, "deeplay.ops.MultiheadSelfAttention.forward", false]], "forward() (deeplay.ops.permute method)": [[124, "deeplay.ops.Permute.forward", false]], "forward() (deeplay.ops.squeeze method)": [[126, "deeplay.ops.Squeeze.forward", false]], "forward() (deeplay.ops.unsqueeze method)": [[127, "deeplay.ops.Unsqueeze.forward", false]], "forward() (deeplay.ops.view method)": [[128, "deeplay.ops.View.forward", false]], "fractioncriterion (class in deeplay.activelearning)": [[5, "deeplay.activelearning.FractionCriterion", false]], "fromdict (class in deeplay.components)": [[47, "deeplay.components.FromDict", false]], "fromlogs (class in deeplay.ops)": [[119, "deeplay.ops.FromLogs", false]], "get_annotated_data() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.get_annotated_data", false]], "get_annotated_labels() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.get_annotated_labels", false]], "get_annotated_samples() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.get_annotated_samples", false]], "get_argspec() (deeplay.external.external method)": [[78, "deeplay.external.External.get_argspec", false]], "get_argspec() (deeplay.module.deeplaymodule class method)": [[112, "deeplay.module.DeeplayModule.get_argspec", false]], "get_default_activation() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.get_default_activation", false]], "get_default_activation() (deeplay.blocks.linearblock method)": [[34, "deeplay.blocks.LinearBlock.get_default_activation", false]], "get_default_merge() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.get_default_merge", false]], "get_default_merge() (deeplay.blocks.linearblock method)": [[34, "deeplay.blocks.LinearBlock.get_default_merge", false]], "get_default_normalization() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.get_default_normalization", false]], "get_default_normalization() (deeplay.blocks.linearblock method)": [[34, "deeplay.blocks.LinearBlock.get_default_normalization", false]], "get_default_shortcut() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.get_default_shortcut", false]], "get_default_shortcut() (deeplay.blocks.linearblock method)": [[34, "deeplay.blocks.LinearBlock.get_default_shortcut", false]], "get_detection_score() (deeplay.applications.lodestar class method)": [[20, "deeplay.applications.LodeSTAR.get_detection_score", false]], "get_forward_args() (deeplay.components.combinelayeractivation method)": [[42, "deeplay.components.CombineLayerActivation.get_forward_args", false]], "get_forward_args() (deeplay.components.transform method)": [[63, "deeplay.components.Transform.get_forward_args", false]], "get_forward_args() (deeplay.components.update method)": [[67, "deeplay.components.Update.get_forward_args", false]], "get_from_user_config() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.get_from_user_config", false]], "get_init_args() (deeplay.external.external method)": [[78, "deeplay.external.External.get_init_args", false]], "get_init_args() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.get_init_args", false]], "get_num_annotated() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.get_num_annotated", false]], "get_signature() (deeplay.external.external method)": [[78, "deeplay.external.External.get_signature", false]], "get_signature() (deeplay.module.deeplaymodule class method)": [[112, "deeplay.module.DeeplayModule.get_signature", false]], "get_subconfig() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.get_subconfig", false]], "get_unannotated_data() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.get_unannotated_data", false]], "get_unannotated_labels() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.get_unannotated_labels", false]], "get_unannotated_samples() (deeplay.activelearning.activelearningdataset method)": [[1, "deeplay.activelearning.ActiveLearningDataset.get_unannotated_samples", false]], "get_user_configuration() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.get_user_configuration", false]], "getitem_with_selections() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.getitem_with_selections", false]], "globalmeanpool (class in deeplay.models)": [[97, "deeplay.models.GlobalMeanPool", false]], "gradient_penalty() (deeplay.activelearning.adversarialstrategy method)": [[2, "deeplay.activelearning.AdversarialStrategy.gradient_penalty", false]], "graphconvolutionalneuralnetwork (class in deeplay.components)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork", false]], "graphtoedgemagik (class in deeplay.models)": [[98, "deeplay.models.GraphToEdgeMAGIK", false]], "graphtoedgempm (class in deeplay.models)": [[99, "deeplay.models.GraphToEdgeMPM", false]], "graphtoglobalmpm (class in deeplay.models)": [[100, "deeplay.models.GraphToGlobalMPM", false]], "graphtonodempm (class in deeplay.models)": [[101, "deeplay.models.GraphToNodeMPM", false]], "hasattr() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.hasattr", false]], "hidden (deeplay.components.convolutionalneuralnetwork attribute)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.hidden", false]], "hidden (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.hidden", false]], "hidden (deeplay.components.messagepassingneuralnetwork attribute)": [[54, "deeplay.components.MessagePassingNeuralNetwork.hidden", false]], "hidden (deeplay.components.multilayerperceptron attribute)": [[56, "deeplay.components.MultiLayerPerceptron.hidden", false]], "hidden (deeplay.components.recurrentneuralnetwork attribute)": [[60, "deeplay.components.RecurrentNeuralNetwork.hidden", false]], "hidden (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.hidden", false]], "hidden (deeplay.components.transformerencoderlayer attribute)": [[65, "deeplay.components.TransformerEncoderLayer.hidden", false]], "hidden (deeplay.models.recurrentmodel attribute)": [[105, "deeplay.models.RecurrentModel.hidden", false]], "hidden (deeplay.models.vit attribute)": [[107, "deeplay.models.ViT.hidden", false]], "history (deeplay.callbacks.loghistory attribute)": [[37, "deeplay.callbacks.LogHistory.history", false]], "history (deeplay.trainer.trainer attribute)": [[134, "deeplay.trainer.Trainer.history", false]], "indexedpositionalembedding (class in deeplay.components)": [[49, "deeplay.components.IndexedPositionalEmbedding", false]], "initialize() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.initialize", false]], "initialize_tensor() (deeplay.initializers.constant method)": [[83, "deeplay.initializers.Constant.initialize_tensor", false]], "initialize_tensor() (deeplay.initializers.kaiming method)": [[84, "deeplay.initializers.Kaiming.initialize_tensor", false]], "initialize_tensor() (deeplay.initializers.normal method)": [[85, "deeplay.initializers.Normal.initialize_tensor", false]], "input (deeplay.components.convolutionalneuralnetwork attribute)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.input", false]], "input (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.input", false]], "input (deeplay.components.messagepassingneuralnetwork attribute)": [[54, "deeplay.components.MessagePassingNeuralNetwork.input", false]], "input (deeplay.components.multilayerperceptron attribute)": [[56, "deeplay.components.MultiLayerPerceptron.input", false]], "input (deeplay.components.recurrentneuralnetwork attribute)": [[60, "deeplay.components.RecurrentNeuralNetwork.input", false]], "input (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.input", false]], "input (deeplay.components.transformerencoderlayer attribute)": [[65, "deeplay.components.TransformerEncoderLayer.input", false]], "input (deeplay.models.recurrentmodel attribute)": [[105, "deeplay.models.RecurrentModel.input", false]], "input (deeplay.models.vit attribute)": [[107, "deeplay.models.ViT.input", false]], "insert() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.insert", false]], "insert() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.insert", false]], "insert_dropout() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.insert_dropout", false]], "instance_count (deeplay.decorators.callback attribute)": [[71, "deeplay.decorators.Callback.instance_count", false]], "is_constructing (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.is_constructing", false]], "isinstance() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.isinstance", false]], "jointdataset (class in deeplay.activelearning)": [[6, "deeplay.activelearning.JointDataset", false]], "kaiming (class in deeplay.initializers)": [[84, "deeplay.initializers.Kaiming", false]], "kwargs (deeplay.external.external attribute)": [[78, "deeplay.external.External.kwargs", false]], "kwargs (deeplay.external.optimizer attribute)": [[80, "deeplay.external.Optimizer.kwargs", false]], "kwargs (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.kwargs", false]], "l1upper (class in deeplay.activelearning)": [[7, "deeplay.activelearning.L1Upper", false]], "l2upper (class in deeplay.activelearning)": [[8, "deeplay.activelearning.L2Upper", false]], "lambda (class in deeplay.ops)": [[120, "deeplay.ops.Lambda", false]], "largemlp (class in deeplay.models)": [[102, "deeplay.models.LargeMLP", false]], "layer (class in deeplay.external)": [[79, "deeplay.external.Layer", false]], "layer (deeplay.components.convolutionalneuralnetwork attribute)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.layer", false]], "layer (deeplay.components.multilayerperceptron attribute)": [[56, "deeplay.components.MultiLayerPerceptron.layer", false]], "layer (deeplay.components.recurrentneuralnetwork attribute)": [[60, "deeplay.components.RecurrentNeuralNetwork.layer", false]], "layer (deeplay.models.recurrentmodel attribute)": [[105, "deeplay.models.RecurrentModel.layer", false]], "layeractivation (class in deeplay.blocks)": [[29, "deeplay.blocks.LayerActivation", false]], "layeractivationnormalization (class in deeplay.blocks)": [[30, "deeplay.blocks.LayerActivationNormalization", false]], "layeractivationnormalizationdropout (class in deeplay.blocks)": [[31, "deeplay.blocks.LayerActivationNormalizationDropout", false]], "layeractivationnormalizationupsample (class in deeplay.blocks)": [[32, "deeplay.blocks.LayerActivationNormalizationUpsample", false]], "layerdropoutskipnormalization (class in deeplay.components)": [[50, "deeplay.components.LayerDropoutSkipNormalization", false]], "layerlist (class in deeplay.list)": [[86, "deeplay.list.LayerList", false]], "layerskip (class in deeplay.blocks)": [[33, "deeplay.blocks.LayerSkip", false]], "learnabledistancewweighting (class in deeplay.components)": [[51, "deeplay.components.LearnableDistancewWeighting", false]], "leastconfidence (class in deeplay.activelearning)": [[9, "deeplay.activelearning.LeastConfidence", false]], "linearblock (class in deeplay.blocks)": [[34, "deeplay.blocks.LinearBlock", false]], "list_names() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.list_names", false]], "local_consistency() (deeplay.applications.lodestar static method)": [[20, "deeplay.applications.LodeSTAR.local_consistency", false]], "lodestar (class in deeplay.applications)": [[20, "deeplay.applications.LodeSTAR", false]], "log() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.log", false]], "log_input() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.log_input", false]], "log_input() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.log_input", false]], "log_metrics() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.log_metrics", false]], "log_output() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.log_output", false]], "log_output() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.log_output", false]], "log_tensor() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.log_tensor", false]], "loghistory (class in deeplay.callbacks)": [[37, "deeplay.callbacks.LogHistory", false]], "logs (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.logs", false]], "margin (class in deeplay.activelearning)": [[10, "deeplay.activelearning.Margin", false]], "max (class in deeplay.components)": [[52, "deeplay.components.Max", false]], "mean (class in deeplay.components)": [[53, "deeplay.components.Mean", false]], "mediummlp (class in deeplay.models)": [[104, "deeplay.models.MediumMLP", false]], "mergeop (class in deeplay.ops)": [[121, "deeplay.ops.MergeOp", false]], "messagepassingneuralnetwork (class in deeplay.components)": [[54, "deeplay.components.MessagePassingNeuralNetwork", false]], "metrics_preprocess() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.metrics_preprocess", false]], "metrics_preprocess() (deeplay.applications.binaryclassifier method)": [[17, "deeplay.applications.BinaryClassifier.metrics_preprocess", false]], "min (class in deeplay.components)": [[55, "deeplay.components.Min", false]], "module": [[137, "module-deeplay.activelearning", false], [138, "module-deeplay.applications", false], [139, "module-deeplay.blocks", false], [140, "module-deeplay.callbacks", false], [141, "module-deeplay.components", false], [142, "module-deeplay.decorators", false], [143, "module-deeplay.external", false], [144, "module-deeplay.initializers", false], [145, "module-deeplay.list", false], [146, "module-deeplay.meta", false], [147, "module-deeplay.models", false], [148, "module-deeplay.module", false], [149, "module-deeplay.ops", false], [150, "module-deeplay.shapes", false], [151, "module-deeplay.trainer", false]], "mpm (class in deeplay.models)": [[103, "deeplay.models.MPM", false]], "multihead (deeplay.components.transformerencoderlayer attribute)": [[65, "deeplay.components.TransformerEncoderLayer.multihead", false]], "multiheadcrossattention (class in deeplay.ops)": [[122, "deeplay.ops.MultiheadCrossAttention", false]], "multiheadselfattention (class in deeplay.components)": [[57, "deeplay.components.MultiheadSelfAttention", false]], "multiheadselfattention (class in deeplay.ops)": [[123, "deeplay.ops.MultiheadSelfAttention", false]], "multilabelclassifier (class in deeplay.applications)": [[21, "deeplay.applications.MultiLabelClassifier", false]], "multilayerperceptron (class in deeplay.components)": [[56, "deeplay.components.MultiLayerPerceptron", false]], "named_children() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.named_children", false]], "new() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.new", false]], "normal (class in deeplay.initializers)": [[85, "deeplay.initializers.Normal", false]], "normalization (deeplay.components.convolutionalencoderdecoder2d attribute)": [[45, "deeplay.components.ConvolutionalEncoderDecoder2d.normalization", false]], "normalization (deeplay.components.convolutionalneuralnetwork attribute)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.normalization", false]], "normalization (deeplay.components.multilayerperceptron attribute)": [[56, "deeplay.components.MultiLayerPerceptron.normalization", false]], "normalization (deeplay.components.recurrentneuralnetwork attribute)": [[60, "deeplay.components.RecurrentNeuralNetwork.normalization", false]], "normalization (deeplay.models.recurrentmodel attribute)": [[105, "deeplay.models.RecurrentModel.normalization", false]], "normalize() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.normalize", false]], "normalize() (deeplay.components.dense_laplacian_normalization method)": [[69, "deeplay.components.dense_laplacian_normalization.normalize", false]], "normalize() (deeplay.components.sparse_laplacian_normalization method)": [[70, "deeplay.components.sparse_laplacian_normalization.normalize", false]], "normalized() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.normalized", false]], "normalized() (deeplay.components.convolutionalneuralnetwork method)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.normalized", false]], "not_top_level() (in module deeplay.meta)": [[91, "deeplay.meta.not_top_level", false]], "on_train_batch_end() (deeplay.callbacks.loghistory method)": [[37, "deeplay.callbacks.LogHistory.on_train_batch_end", false]], "on_train_end() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.on_train_end", false]], "on_train_epoch_end() (deeplay.callbacks.loghistory method)": [[37, "deeplay.callbacks.LogHistory.on_train_epoch_end", false]], "on_train_start() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.on_train_start", false]], "on_validation_epoch_end() (deeplay.callbacks.loghistory method)": [[37, "deeplay.callbacks.LogHistory.on_validation_epoch_end", false]], "optimizer (class in deeplay.external)": [[80, "deeplay.external.Optimizer", false]], "output (deeplay.components.convolutionalneuralnetwork attribute)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.output", false]], "output (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.output", false]], "output (deeplay.components.messagepassingneuralnetwork attribute)": [[54, "deeplay.components.MessagePassingNeuralNetwork.output", false]], "output (deeplay.components.multilayerperceptron attribute)": [[56, "deeplay.components.MultiLayerPerceptron.output", false]], "output (deeplay.components.recurrentneuralnetwork attribute)": [[60, "deeplay.components.RecurrentNeuralNetwork.output", false]], "output (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.output", false]], "output (deeplay.components.transformerencoderlayer attribute)": [[65, "deeplay.components.TransformerEncoderLayer.output", false]], "output (deeplay.models.recurrentmodel attribute)": [[105, "deeplay.models.RecurrentModel.output", false]], "output (deeplay.models.vit attribute)": [[107, "deeplay.models.ViT.output", false]], "parallel (class in deeplay.list)": [[87, "deeplay.list.Parallel", false]], "params() (deeplay.external.optimizer method)": [[80, "deeplay.external.Optimizer.params", false]], "permute (class in deeplay.ops)": [[124, "deeplay.ops.Permute", false]], "plot() (deeplay.callbacks.loghistory method)": [[37, "deeplay.callbacks.LogHistory.plot", false]], "pool (deeplay.components.convolutionalencoderdecoder2d attribute)": [[45, "deeplay.components.ConvolutionalEncoderDecoder2d.pool", false]], "pooled() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.pooled", false]], "pooled() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.pooled", false]], "pooled() (deeplay.components.convolutionalneuralnetwork method)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.pooled", false]], "poollayeractivationnormalization (class in deeplay.blocks)": [[35, "deeplay.blocks.PoolLayerActivationNormalization", false]], "pop() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.pop", false]], "positionalembedding (class in deeplay.components)": [[58, "deeplay.components.PositionalEmbedding", false]], "predict() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.predict", false]], "predict_step() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.predict_step", false]], "prefix() (deeplay.module.config method)": [[109, "deeplay.module.Config.prefix", false]], "prefix() (deeplay.module.configitem method)": [[110, "deeplay.module.ConfigItem.prefix", false]], "prefix() (deeplay.module.detachedconfigitem method)": [[113, "deeplay.module.DetachedConfigItem.prefix", false]], "prepend() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.prepend", false]], "prepend_dropout() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.prepend_dropout", false]], "prod (class in deeplay.components)": [[59, "deeplay.components.Prod", false]], "productcriterion (class in deeplay.activelearning)": [[11, "deeplay.activelearning.ProductCriterion", false]], "propagate (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.propagate", false]], "propagate (deeplay.components.messagepassingneuralnetwork attribute)": [[54, "deeplay.components.MessagePassingNeuralNetwork.propagate", false]], "propagate (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.propagate", false]], "query() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.query", false]], "query_and_update() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.query_and_update", false]], "query_strategy() (deeplay.activelearning.adversarialstrategy method)": [[2, "deeplay.activelearning.AdversarialStrategy.query_strategy", false]], "query_strategy() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.query_strategy", false]], "query_strategy() (deeplay.activelearning.uncertaintystrategy method)": [[14, "deeplay.activelearning.UncertaintyStrategy.query_strategy", false]], "query_strategy() (deeplay.activelearning.uniformstrategy method)": [[15, "deeplay.activelearning.UniformStrategy.query_strategy", false]], "query_train() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.query_train", false]], "query_val() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.query_val", false]], "recurrentblock (class in deeplay.blocks)": [[36, "deeplay.blocks.RecurrentBlock", false]], "recurrentmodel (class in deeplay.models)": [[105, "deeplay.models.RecurrentModel", false]], "recurrentneuralnetwork (class in deeplay.components)": [[60, "deeplay.components.RecurrentNeuralNetwork", false]], "reduce() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.reduce", false]], "referringlayerlist (class in deeplay.list)": [[88, "deeplay.list.ReferringLayerList", false]], "register_after_build_hook() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.register_after_build_hook", false]], "register_after_init_hook() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.register_after_init_hook", false]], "register_before_build_hook() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.register_before_build_hook", false]], "register_computed() (deeplay.external.layer class method)": [[79, "deeplay.external.Layer.register_computed", false]], "register_style() (deeplay.module.deeplaymodule class method)": [[112, "deeplay.module.DeeplayModule.register_style", false]], "regressor (class in deeplay.applications)": [[22, "deeplay.applications.Regressor", false]], "remove() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.remove", false]], "remove() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.remove", false]], "remove_derived_configurations() (deeplay.module.config method)": [[109, "deeplay.module.Config.remove_derived_configurations", false]], "remove_dropout() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.remove_dropout", false]], "reparameterize() (deeplay.applications.variationalautoencoder method)": [[23, "deeplay.applications.VariationalAutoEncoder.reparameterize", false]], "replace() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.replace", false]], "replace() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.replace", false]], "reset_model() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.reset_model", false]], "reshape (class in deeplay.ops)": [[125, "deeplay.ops.Reshape", false]], "residualmessagepassingneuralnetwork (class in deeplay.components)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork", false]], "reverse_two_operation() (in module deeplay.shapes)": [[131, "deeplay.shapes.reverse_two_operation", false]], "richprogressbar (class in deeplay.callbacks)": [[38, "deeplay.callbacks.RichProgressBar", false]], "rmsprop (class in deeplay.external)": [[81, "deeplay.external.RMSprop", false]], "root_module (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.root_module", false]], "score() (deeplay.activelearning.activelearningcriterion method)": [[0, "deeplay.activelearning.ActiveLearningCriterion.score", false]], "score() (deeplay.activelearning.constant method)": [[3, "deeplay.activelearning.Constant.score", false]], "score() (deeplay.activelearning.entropy method)": [[4, "deeplay.activelearning.Entropy.score", false]], "score() (deeplay.activelearning.fractioncriterion method)": [[5, "deeplay.activelearning.FractionCriterion.score", false]], "score() (deeplay.activelearning.l1upper method)": [[7, "deeplay.activelearning.L1Upper.score", false]], "score() (deeplay.activelearning.l2upper method)": [[8, "deeplay.activelearning.L2Upper.score", false]], "score() (deeplay.activelearning.leastconfidence method)": [[9, "deeplay.activelearning.LeastConfidence.score", false]], "score() (deeplay.activelearning.margin method)": [[10, "deeplay.activelearning.Margin.score", false]], "score() (deeplay.activelearning.productcriterion method)": [[11, "deeplay.activelearning.ProductCriterion.score", false]], "score() (deeplay.activelearning.sumcriterion method)": [[13, "deeplay.activelearning.SumCriterion.score", false]], "selection (class in deeplay.module)": [[114, "deeplay.module.Selection", false]], "sequential (class in deeplay.list)": [[89, "deeplay.list.Sequential", false]], "set() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.set", false]], "set_dropout() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.set_dropout", false]], "set_for_tags() (deeplay.module.config method)": [[109, "deeplay.module.Config.set_for_tags", false]], "set_input_map() (deeplay.blocks.block method)": [[26, "deeplay.blocks.Block.set_input_map", false]], "set_input_map() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.set_input_map", false]], "set_input_map() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.set_input_map", false]], "set_input_map() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.set_input_map", false]], "set_output_map() (deeplay.blocks.block method)": [[26, "deeplay.blocks.Block.set_output_map", false]], "set_output_map() (deeplay.list.layerlist method)": [[86, "deeplay.list.LayerList.set_output_map", false]], "set_output_map() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.set_output_map", false]], "set_output_map() (deeplay.module.selection method)": [[114, "deeplay.module.Selection.set_output_map", false]], "set_root_module() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.set_root_module", false]], "sgd (class in deeplay.external)": [[82, "deeplay.external.SGD", false]], "smallmlp (class in deeplay.models)": [[106, "deeplay.models.SmallMLP", false]], "source_depth (deeplay.module.configitem attribute)": [[110, "deeplay.module.ConfigItem.source_depth", false]], "source_depth (deeplay.module.detachedconfigitem attribute)": [[113, "deeplay.module.DetachedConfigItem.source_depth", false]], "sparse_laplacian_normalization (class in deeplay.components)": [[70, "deeplay.components.sparse_laplacian_normalization", false]], "squeeze (class in deeplay.ops)": [[126, "deeplay.ops.Squeeze", false]], "stateful() (in module deeplay.decorators)": [[75, "deeplay.decorators.stateful", false]], "step_history (deeplay.callbacks.loghistory attribute)": [[37, "deeplay.callbacks.LogHistory.step_history", false]], "strategy (class in deeplay.activelearning)": [[12, "deeplay.activelearning.Strategy", false]], "strided() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.strided", false]], "strided() (deeplay.components.convolutionalencoder2d method)": [[44, "deeplay.components.ConvolutionalEncoder2d.strided", false]], "strided() (deeplay.components.convolutionalneuralnetwork method)": [[46, "deeplay.components.ConvolutionalNeuralNetwork.strided", false]], "style() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.style", false]], "styled() (deeplay.module.deeplaymodule method)": [[112, "deeplay.module.DeeplayModule.styled", false]], "sum (class in deeplay.components)": [[62, "deeplay.components.Sum", false]], "sum (deeplay.components.mean attribute)": [[53, "deeplay.components.Mean.Sum", false]], "sumcriterion (class in deeplay.activelearning)": [[13, "deeplay.activelearning.SumCriterion", false]], "tags (deeplay.module.deeplaymodule attribute)": [[112, "deeplay.module.DeeplayModule.tags", false]], "take() (deeplay.module.config method)": [[109, "deeplay.module.Config.take", false]], "test() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.test", false]], "test_dataloader() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.test_dataloader", false]], "test_preprocess() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.test_preprocess", false]], "test_preprocess() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.test_preprocess", false]], "test_step() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.test_step", false]], "test_step() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.test_step", false]], "train_dataloader() (deeplay.activelearning.adversarialstrategy method)": [[2, "deeplay.activelearning.AdversarialStrategy.train_dataloader", false]], "train_dataloader() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.train_dataloader", false]], "train_preprocess() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.train_preprocess", false]], "train_preprocess() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.train_preprocess", false]], "trainer (class in deeplay.trainer)": [[134, "deeplay.trainer.Trainer", false]], "trainer (deeplay.applications.application attribute)": [[16, "deeplay.applications.Application.trainer", false]], "training_step() (deeplay.activelearning.adversarialstrategy method)": [[2, "deeplay.activelearning.AdversarialStrategy.training_step", false]], "training_step() (deeplay.activelearning.uncertaintystrategy method)": [[14, "deeplay.activelearning.UncertaintyStrategy.training_step", false]], "training_step() (deeplay.activelearning.uniformstrategy method)": [[15, "deeplay.activelearning.UniformStrategy.training_step", false]], "training_step() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.training_step", false]], "training_step() (deeplay.applications.variationalautoencoder method)": [[23, "deeplay.applications.VariationalAutoEncoder.training_step", false]], "training_step() (deeplay.applications.wassersteinautoencoder method)": [[24, "deeplay.applications.WassersteinAutoEncoder.training_step", false]], "transform (class in deeplay.components)": [[63, "deeplay.components.Transform", false]], "transform (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.transform", false]], "transform (deeplay.components.messagepassingneuralnetwork attribute)": [[54, "deeplay.components.MessagePassingNeuralNetwork.transform", false]], "transform (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.transform", false]], "transform_data() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.transform_data", false]], "transformerencoderlayer (class in deeplay.components)": [[65, "deeplay.components.TransformerEncoderLayer", false]], "transformpropagateupdate (class in deeplay.components)": [[64, "deeplay.components.TransformPropagateUpdate", false]], "transposed() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.transposed", false]], "try_attach_detached_configurations() (deeplay.module.config method)": [[109, "deeplay.module.Config.try_attach_detached_configurations", false]], "two_operation() (in module deeplay.shapes)": [[132, "deeplay.shapes.two_operation", false]], "unary_operation() (in module deeplay.shapes)": [[133, "deeplay.shapes.unary_operation", false]], "uncertaintystrategy (class in deeplay.activelearning)": [[14, "deeplay.activelearning.UncertaintyStrategy", false]], "unet2d (class in deeplay.components)": [[66, "deeplay.components.UNet2d", false]], "uniformstrategy (class in deeplay.activelearning)": [[15, "deeplay.activelearning.UniformStrategy", false]], "unsqueeze (class in deeplay.ops)": [[127, "deeplay.ops.Unsqueeze", false]], "update (class in deeplay.components)": [[67, "deeplay.components.Update", false]], "update (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[48, "deeplay.components.GraphConvolutionalNeuralNetwork.update", false]], "update (deeplay.components.messagepassingneuralnetwork attribute)": [[54, "deeplay.components.MessagePassingNeuralNetwork.update", false]], "update (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[61, "deeplay.components.ResidualMessagePassingNeuralNetwork.update", false]], "update() (deeplay.module.config method)": [[109, "deeplay.module.Config.update", false]], "upsample (deeplay.components.convolutionalencoderdecoder2d attribute)": [[45, "deeplay.components.ConvolutionalEncoderDecoder2d.upsample", false]], "upsampled() (deeplay.blocks.conv2dblock method)": [[27, "deeplay.blocks.Conv2dBlock.upsampled", false]], "upsampled() (deeplay.components.convolutionaldecoder2d method)": [[43, "deeplay.components.ConvolutionalDecoder2d.upsampled", false]], "val_preprocess() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.val_preprocess", false]], "val_preprocess() (deeplay.applications.lodestar method)": [[20, "deeplay.applications.LodeSTAR.val_preprocess", false]], "validate_after_build() (deeplay.blocks.conv2dresidual method)": [[28, "deeplay.blocks.Conv2dResidual.validate_after_build", false]], "validation_step() (deeplay.activelearning.strategy method)": [[12, "deeplay.activelearning.Strategy.validation_step", false]], "validation_step() (deeplay.applications.application method)": [[16, "deeplay.applications.Application.validation_step", false]], "variable (class in deeplay.shapes)": [[130, "deeplay.shapes.Variable", false]], "variationalautoencoder (class in deeplay.applications)": [[23, "deeplay.applications.VariationalAutoEncoder", false]], "view (class in deeplay.ops)": [[128, "deeplay.ops.View", false]], "vit (class in deeplay.models)": [[107, "deeplay.models.ViT", false]], "wassersteinautoencoder (class in deeplay.applications)": [[24, "deeplay.applications.WassersteinAutoEncoder", false]], "weightedsum (class in deeplay.components)": [[68, "deeplay.components.WeightedSum", false]], "xlargemlp (class in deeplay.models)": [[108, "deeplay.models.XLargeMLP", false]]}, "objects": {"deeplay": [[137, 0, 0, "-", "activelearning"], [138, 0, 0, "-", "applications"], [139, 0, 0, "-", "blocks"], [140, 0, 0, "-", "callbacks"], [141, 0, 0, "-", "components"], [142, 0, 0, "-", "decorators"], [143, 0, 0, "-", "external"], [144, 0, 0, "-", "initializers"], [145, 0, 0, "-", "list"], [146, 0, 0, "-", "meta"], [147, 0, 0, "-", "models"], [148, 0, 0, "-", "module"], [149, 0, 0, "-", "ops"], [150, 0, 0, "-", "shapes"], [151, 0, 0, "-", "trainer"]], "deeplay.activelearning": [[0, 1, 1, "", "ActiveLearningCriterion"], [1, 1, 1, "", "ActiveLearningDataset"], [2, 1, 1, "", "AdversarialStrategy"], [3, 1, 1, "", "Constant"], [4, 1, 1, "", "Entropy"], [5, 1, 1, "", "FractionCriterion"], [6, 1, 1, "", "JointDataset"], [7, 1, 1, "", "L1Upper"], [8, 1, 1, "", "L2Upper"], [9, 1, 1, "", "LeastConfidence"], [10, 1, 1, "", "Margin"], [11, 1, 1, "", "ProductCriterion"], [12, 1, 1, "", "Strategy"], [13, 1, 1, "", "SumCriterion"], [14, 1, 1, "", "UncertaintyStrategy"], [15, 1, 1, "", "UniformStrategy"]], "deeplay.activelearning.ActiveLearningCriterion": [[0, 2, 1, "", "score"]], "deeplay.activelearning.ActiveLearningDataset": [[1, 2, 1, "", "annotate"], [1, 2, 1, "", "annotate_random"], [1, 2, 1, "", "get_annotated_data"], [1, 2, 1, "", "get_annotated_labels"], [1, 2, 1, "", "get_annotated_samples"], [1, 2, 1, "", "get_num_annotated"], [1, 2, 1, "", "get_unannotated_data"], [1, 2, 1, "", "get_unannotated_labels"], [1, 2, 1, "", "get_unannotated_samples"]], "deeplay.activelearning.AdversarialStrategy": [[2, 2, 1, "", "configure_optimizers"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "gradient_penalty"], [2, 2, 1, "", "query_strategy"], [2, 2, 1, "", "train_dataloader"], [2, 2, 1, "", "training_step"]], "deeplay.activelearning.Constant": [[3, 2, 1, "", "score"]], "deeplay.activelearning.Entropy": [[4, 2, 1, "", "score"]], "deeplay.activelearning.FractionCriterion": [[5, 2, 1, "", "score"]], "deeplay.activelearning.L1Upper": [[7, 2, 1, "", "score"]], "deeplay.activelearning.L2Upper": [[8, 2, 1, "", "score"]], "deeplay.activelearning.LeastConfidence": [[9, 2, 1, "", "score"]], "deeplay.activelearning.Margin": [[10, 2, 1, "", "score"]], "deeplay.activelearning.ProductCriterion": [[11, 2, 1, "", "score"]], "deeplay.activelearning.Strategy": [[12, 2, 1, "", "on_train_start"], [12, 2, 1, "", "query"], [12, 2, 1, "", "query_and_update"], [12, 2, 1, "", "query_strategy"], [12, 2, 1, "", "query_train"], [12, 2, 1, "", "query_val"], [12, 2, 1, "", "reset_model"], [12, 2, 1, "", "test_dataloader"], [12, 2, 1, "", "test_step"], [12, 2, 1, "", "train_dataloader"], [12, 2, 1, "", "validation_step"]], "deeplay.activelearning.SumCriterion": [[13, 2, 1, "", "score"]], "deeplay.activelearning.UncertaintyStrategy": [[14, 2, 1, "", "forward"], [14, 2, 1, "", "query_strategy"], [14, 2, 1, "", "training_step"]], "deeplay.activelearning.UniformStrategy": [[15, 2, 1, "", "forward"], [15, 2, 1, "", "query_strategy"], [15, 2, 1, "", "training_step"]], "deeplay.applications": [[16, 1, 1, "", "Application"], [17, 1, 1, "", "BinaryClassifier"], [18, 1, 1, "", "CategoricalClassifier"], [19, 1, 1, "", "Classifier"], [20, 1, 1, "", "LodeSTAR"], [21, 1, 1, "", "MultiLabelClassifier"], [22, 1, 1, "", "Regressor"], [23, 1, 1, "", "VariationalAutoEncoder"], [24, 1, 1, "", "WassersteinAutoEncoder"]], "deeplay.applications.Application": [[16, 2, 1, "", "__call__"], [16, 2, 1, "", "build"], [16, 2, 1, "", "clone_metrics"], [16, 2, 1, "", "compute_loss"], [16, 2, 1, "", "configure_optimizers"], [16, 2, 1, "", "create_data"], [16, 2, 1, "", "create_optimizer_with_params"], [16, 2, 1, "", "fit"], [16, 2, 1, "", "forward"], [16, 2, 1, "", "log"], [16, 2, 1, "", "log_metrics"], [16, 2, 1, "", "metrics_preprocess"], [16, 2, 1, "", "named_children"], [16, 2, 1, "", "predict_step"], [16, 2, 1, "", "test"], [16, 2, 1, "", "test_preprocess"], [16, 2, 1, "", "test_step"], [16, 2, 1, "", "train_preprocess"], [16, 3, 1, "", "trainer"], [16, 2, 1, "", "training_step"], [16, 2, 1, "", "val_preprocess"], [16, 2, 1, "", "validation_step"]], "deeplay.applications.BinaryClassifier": [[17, 2, 1, "", "compute_loss"], [17, 2, 1, "", "forward"], [17, 2, 1, "", "metrics_preprocess"]], "deeplay.applications.CategoricalClassifier": [[18, 2, 1, "", "compute_loss"], [18, 2, 1, "", "forward"]], "deeplay.applications.Classifier": [[19, 2, 1, "", "compute_loss"], [19, 2, 1, "", "forward"]], "deeplay.applications.LodeSTAR": [[20, 2, 1, "", "compute_loss"], [20, 2, 1, "", "detect"], [20, 2, 1, "", "detect_single"], [20, 2, 1, "", "find_local_maxima"], [20, 2, 1, "", "forward"], [20, 2, 1, "", "get_detection_score"], [20, 2, 1, "", "local_consistency"], [20, 2, 1, "", "normalize"], [20, 2, 1, "", "on_train_end"], [20, 2, 1, "", "pooled"], [20, 2, 1, "", "reduce"], [20, 2, 1, "", "test_preprocess"], [20, 2, 1, "", "train_preprocess"], [20, 2, 1, "", "transform_data"], [20, 2, 1, "", "val_preprocess"]], "deeplay.applications.MultiLabelClassifier": [[21, 2, 1, "", "compute_loss"], [21, 2, 1, "", "forward"]], "deeplay.applications.Regressor": [[22, 2, 1, "", "forward"]], "deeplay.applications.VariationalAutoEncoder": [[23, 2, 1, "", "compute_loss"], [23, 2, 1, "", "decode"], [23, 2, 1, "", "encode"], [23, 2, 1, "", "forward"], [23, 2, 1, "", "reparameterize"], [23, 2, 1, "", "training_step"]], "deeplay.applications.WassersteinAutoEncoder": [[24, 2, 1, "", "compute_IMQ"], [24, 2, 1, "", "compute_kernel"], [24, 2, 1, "", "compute_loss"], [24, 2, 1, "", "compute_mmd"], [24, 2, 1, "", "decode"], [24, 2, 1, "", "encode"], [24, 2, 1, "", "forward"], [24, 2, 1, "", "training_step"]], "deeplay.blocks": [[25, 1, 1, "", "BaseResidual"], [26, 1, 1, "", "Block"], [27, 1, 1, "", "Conv2dBlock"], [28, 1, 1, "", "Conv2dResidual"], [29, 1, 1, "", "LayerActivation"], [30, 1, 1, "", "LayerActivationNormalization"], [31, 1, 1, "", "LayerActivationNormalizationDropout"], [32, 1, 1, "", "LayerActivationNormalizationUpsample"], [33, 1, 1, "", "LayerSkip"], [34, 1, 1, "", "LinearBlock"], [35, 1, 1, "", "PoolLayerActivationNormalization"], [36, 1, 1, "", "RecurrentBlock"]], "deeplay.blocks.BaseResidual": [[25, 2, 1, "", "forward"]], "deeplay.blocks.Block": [[26, 3, 1, "", "configurables"], [26, 2, 1, "", "configure"], [26, 2, 1, "", "set_input_map"], [26, 2, 1, "", "set_output_map"]], "deeplay.blocks.Conv2dBlock": [[27, 2, 1, "", "call_with_dummy_data"], [27, 3, 1, "", "expected_input_shape"], [27, 2, 1, "", "get_default_activation"], [27, 2, 1, "", "get_default_merge"], [27, 2, 1, "", "get_default_normalization"], [27, 2, 1, "", "get_default_shortcut"], [27, 2, 1, "", "normalized"], [27, 2, 1, "", "pooled"], [27, 2, 1, "", "strided"], [27, 2, 1, "", "transposed"], [27, 2, 1, "", "upsampled"]], "deeplay.blocks.Conv2dResidual": [[28, 2, 1, "", "validate_after_build"]], "deeplay.blocks.LayerActivation": [[29, 2, 1, "", "configure"]], "deeplay.blocks.LayerActivationNormalization": [[30, 2, 1, "", "configure"]], "deeplay.blocks.LayerActivationNormalizationDropout": [[31, 2, 1, "", "configure"]], "deeplay.blocks.LayerActivationNormalizationUpsample": [[32, 2, 1, "", "configure"]], "deeplay.blocks.LayerSkip": [[33, 2, 1, "", "configure"], [33, 2, 1, "", "forward"]], "deeplay.blocks.LinearBlock": [[34, 2, 1, "", "call_with_dummy_data"], [34, 2, 1, "", "get_default_activation"], [34, 2, 1, "", "get_default_merge"], [34, 2, 1, "", "get_default_normalization"], [34, 2, 1, "", "get_default_shortcut"]], "deeplay.blocks.PoolLayerActivationNormalization": [[35, 2, 1, "", "configure"]], "deeplay.blocks.RecurrentBlock": [[36, 2, 1, "", "configure"]], "deeplay.callbacks": [[37, 1, 1, "", "LogHistory"], [38, 1, 1, "", "RichProgressBar"]], "deeplay.callbacks.LogHistory": [[37, 3, 1, "", "history"], [37, 2, 1, "", "on_train_batch_end"], [37, 2, 1, "", "on_train_epoch_end"], [37, 2, 1, "", "on_validation_epoch_end"], [37, 2, 1, "", "plot"], [37, 3, 1, "", "step_history"]], "deeplay.components": [[39, 1, 1, "", "Add"], [40, 1, 1, "", "AddDict"], [41, 1, 1, "", "AttentionUNet"], [42, 1, 1, "", "CombineLayerActivation"], [43, 1, 1, "", "ConvolutionalDecoder2d"], [44, 1, 1, "", "ConvolutionalEncoder2d"], [45, 1, 1, "", "ConvolutionalEncoderDecoder2d"], [46, 1, 1, "", "ConvolutionalNeuralNetwork"], [47, 1, 1, "", "FromDict"], [48, 1, 1, "", "GraphConvolutionalNeuralNetwork"], [49, 1, 1, "", "IndexedPositionalEmbedding"], [50, 1, 1, "", "LayerDropoutSkipNormalization"], [51, 1, 1, "", "LearnableDistancewWeighting"], [52, 1, 1, "", "Max"], [53, 1, 1, "", "Mean"], [54, 1, 1, "", "MessagePassingNeuralNetwork"], [55, 1, 1, "", "Min"], [56, 1, 1, "", "MultiLayerPerceptron"], [57, 1, 1, "", "MultiheadSelfAttention"], [58, 1, 1, "", "PositionalEmbedding"], [59, 1, 1, "", "Prod"], [60, 1, 1, "", "RecurrentNeuralNetwork"], [61, 1, 1, "", "ResidualMessagePassingNeuralNetwork"], [62, 1, 1, "", "Sum"], [63, 1, 1, "", "Transform"], [64, 1, 1, "", "TransformPropagateUpdate"], [65, 1, 1, "", "TransformerEncoderLayer"], [66, 1, 1, "", "UNet2d"], [67, 1, 1, "", "Update"], [68, 1, 1, "", "WeightedSum"], [69, 1, 1, "", "dense_laplacian_normalization"], [70, 1, 1, "", "sparse_laplacian_normalization"]], "deeplay.components.Add": [[39, 2, 1, "", "forward"]], "deeplay.components.AddDict": [[40, 2, 1, "", "forward"]], "deeplay.components.AttentionUNet": [[41, 2, 1, "", "configure"], [41, 2, 1, "", "forward"]], "deeplay.components.CombineLayerActivation": [[42, 2, 1, "", "configure"], [42, 2, 1, "", "forward"], [42, 2, 1, "", "get_forward_args"]], "deeplay.components.ConvolutionalDecoder2d": [[43, 2, 1, "", "configure"], [43, 2, 1, "", "forward"], [43, 2, 1, "", "upsampled"]], "deeplay.components.ConvolutionalEncoder2d": [[44, 3, 1, "", "channel"], [44, 2, 1, "", "configure"], [44, 2, 1, "", "forward"], [44, 2, 1, "", "strided"]], "deeplay.components.ConvolutionalEncoderDecoder2d": [[45, 3, 1, "", "blocks"], [45, 2, 1, "", "forward"], [45, 3, 1, "", "normalization"], [45, 3, 1, "", "pool"], [45, 3, 1, "", "upsample"]], "deeplay.components.ConvolutionalNeuralNetwork": [[46, 3, 1, "", "activation"], [46, 2, 1, "", "configure"], [46, 2, 1, "", "forward"], [46, 3, 1, "", "hidden"], [46, 3, 1, "", "input"], [46, 3, 1, "", "layer"], [46, 3, 1, "", "normalization"], [46, 2, 1, "", "normalized"], [46, 3, 1, "", "output"], [46, 2, 1, "", "pooled"], [46, 2, 1, "", "strided"]], "deeplay.components.FromDict": [[47, 2, 1, "", "extra_repr"], [47, 2, 1, "", "forward"]], "deeplay.components.GraphConvolutionalNeuralNetwork": [[48, 2, 1, "", "configure"], [48, 2, 1, "", "forward"], [48, 3, 1, "", "hidden"], [48, 3, 1, "", "input"], [48, 3, 1, "", "output"], [48, 3, 1, "", "propagate"], [48, 3, 1, "", "transform"], [48, 3, 1, "", "update"]], "deeplay.components.IndexedPositionalEmbedding": [[49, 2, 1, "", "fetch_embeddings"], [49, 2, 1, "", "forward"]], "deeplay.components.LayerDropoutSkipNormalization": [[50, 2, 1, "", "configure"], [50, 2, 1, "", "forward"]], "deeplay.components.LearnableDistancewWeighting": [[51, 2, 1, "", "extra_repr"], [51, 2, 1, "", "forward"]], "deeplay.components.Max": [[52, 2, 1, "", "forward"]], "deeplay.components.Mean": [[53, 3, 1, "", "Sum"], [53, 2, 1, "", "forward"]], "deeplay.components.MessagePassingNeuralNetwork": [[54, 2, 1, "", "configure"], [54, 2, 1, "", "forward"], [54, 3, 1, "", "hidden"], [54, 3, 1, "", "input"], [54, 3, 1, "", "output"], [54, 3, 1, "", "propagate"], [54, 3, 1, "", "transform"], [54, 3, 1, "", "update"]], "deeplay.components.Min": [[55, 2, 1, "", "forward"]], "deeplay.components.MultiLayerPerceptron": [[56, 3, 1, "", "activation"], [56, 2, 1, "", "configure"], [56, 3, 1, "", "dropout"], [56, 2, 1, "", "forward"], [56, 3, 1, "", "hidden"], [56, 3, 1, "", "input"], [56, 3, 1, "", "layer"], [56, 3, 1, "", "normalization"], [56, 3, 1, "", "output"]], "deeplay.components.MultiheadSelfAttention": [[57, 2, 1, "", "forward"]], "deeplay.components.PositionalEmbedding": [[58, 2, 1, "", "forward"]], "deeplay.components.Prod": [[59, 2, 1, "", "forward"]], "deeplay.components.RecurrentNeuralNetwork": [[60, 3, 1, "", "activation"], [60, 2, 1, "", "bidirectional"], [60, 2, 1, "", "configure"], [60, 3, 1, "", "dropout"], [60, 2, 1, "", "forward"], [60, 3, 1, "", "hidden"], [60, 3, 1, "", "input"], [60, 3, 1, "", "layer"], [60, 3, 1, "", "normalization"], [60, 3, 1, "", "output"]], "deeplay.components.ResidualMessagePassingNeuralNetwork": [[61, 2, 1, "", "configure"], [61, 2, 1, "", "forward"], [61, 3, 1, "", "hidden"], [61, 3, 1, "", "input"], [61, 3, 1, "", "output"], [61, 3, 1, "", "propagate"], [61, 3, 1, "", "transform"], [61, 3, 1, "", "update"]], "deeplay.components.Sum": [[62, 2, 1, "", "forward"]], "deeplay.components.Transform": [[63, 2, 1, "", "get_forward_args"]], "deeplay.components.TransformPropagateUpdate": [[64, 2, 1, "", "configure"]], "deeplay.components.TransformerEncoderLayer": [[65, 2, 1, "", "configure"], [65, 3, 1, "", "feed_forward"], [65, 2, 1, "", "forward"], [65, 3, 1, "", "hidden"], [65, 3, 1, "", "input"], [65, 3, 1, "", "multihead"], [65, 3, 1, "", "output"]], "deeplay.components.UNet2d": [[66, 2, 1, "", "configure"], [66, 2, 1, "", "forward"]], "deeplay.components.Update": [[67, 2, 1, "", "get_forward_args"]], "deeplay.components.WeightedSum": [[68, 2, 1, "", "forward"]], "deeplay.components.dense_laplacian_normalization": [[69, 2, 1, "", "degree"], [69, 2, 1, "", "forward"], [69, 2, 1, "", "normalize"]], "deeplay.components.sparse_laplacian_normalization": [[70, 2, 1, "", "add_self_loops"], [70, 2, 1, "", "degree"], [70, 2, 1, "", "forward"], [70, 2, 1, "", "normalize"]], "deeplay.decorators": [[71, 1, 1, "", "Callback"], [72, 4, 1, "", "after_build"], [73, 4, 1, "", "after_init"], [74, 4, 1, "", "before_build"], [75, 4, 1, "", "stateful"]], "deeplay.decorators.Callback": [[71, 2, 1, "", "__call__"], [71, 3, 1, "", "instance_count"]], "deeplay.external": [[76, 1, 1, "", "Adam"], [77, 1, 1, "", "AdamW"], [78, 1, 1, "", "External"], [79, 1, 1, "", "Layer"], [80, 1, 1, "", "Optimizer"], [81, 1, 1, "", "RMSprop"], [82, 1, 1, "", "SGD"]], "deeplay.external.External": [[78, 2, 1, "", "assert_not_positional_only_and_variadic"], [78, 2, 1, "", "build"], [78, 2, 1, "", "build_arguments_from"], [78, 2, 1, "", "configure"], [78, 2, 1, "", "create"], [78, 2, 1, "", "get_argspec"], [78, 2, 1, "", "get_init_args"], [78, 2, 1, "", "get_signature"], [78, 3, 1, "", "kwargs"]], "deeplay.external.Layer": [[79, 2, 1, "", "configure"], [79, 2, 1, "", "forward"], [79, 2, 1, "", "register_computed"]], "deeplay.external.Optimizer": [[80, 3, 1, "", "kwargs"], [80, 2, 1, "", "params"]], "deeplay.initializers": [[83, 1, 1, "", "Constant"], [84, 1, 1, "", "Kaiming"], [85, 1, 1, "", "Normal"]], "deeplay.initializers.Constant": [[83, 2, 1, "", "initialize_tensor"]], "deeplay.initializers.Kaiming": [[84, 2, 1, "", "initialize_tensor"]], "deeplay.initializers.Normal": [[85, 2, 1, "", "initialize_tensor"]], "deeplay.list": [[86, 1, 1, "", "LayerList"], [87, 1, 1, "", "Parallel"], [88, 1, 1, "", "ReferringLayerList"], [89, 1, 1, "", "Sequential"]], "deeplay.list.LayerList": [[86, 2, 1, "", "append"], [86, 2, 1, "", "configure"], [86, 2, 1, "", "extend"], [86, 2, 1, "", "insert"], [86, 2, 1, "", "pop"], [86, 2, 1, "", "remove"], [86, 2, 1, "", "set_input_map"], [86, 2, 1, "", "set_output_map"]], "deeplay.list.Parallel": [[87, 2, 1, "", "forward"]], "deeplay.list.ReferringLayerList": [[88, 2, 1, "", "__call__"]], "deeplay.list.Sequential": [[89, 2, 1, "", "forward"]], "deeplay.meta": [[90, 1, 1, "", "ExtendedConstructorMeta"], [91, 4, 1, "", "not_top_level"]], "deeplay.meta.ExtendedConstructorMeta": [[90, 2, 1, "", "__call__"]], "deeplay.models": [[92, 1, 1, "", "BackboneResnet18"], [93, 1, 1, "", "CycleGANDiscriminator"], [94, 1, 1, "", "CycleGANResnetGenerator"], [95, 1, 1, "", "DCGANDiscriminator"], [96, 1, 1, "", "DCGANGenerator"], [97, 1, 1, "", "GlobalMeanPool"], [98, 1, 1, "", "GraphToEdgeMAGIK"], [99, 1, 1, "", "GraphToEdgeMPM"], [100, 1, 1, "", "GraphToGlobalMPM"], [101, 1, 1, "", "GraphToNodeMPM"], [102, 1, 1, "", "LargeMLP"], [103, 1, 1, "", "MPM"], [104, 1, 1, "", "MediumMLP"], [105, 1, 1, "", "RecurrentModel"], [106, 1, 1, "", "SmallMLP"], [107, 1, 1, "", "ViT"], [108, 1, 1, "", "XLargeMLP"]], "deeplay.models.BackboneResnet18": [[92, 2, 1, "", "forward"]], "deeplay.models.CycleGANResnetGenerator": [[94, 2, 1, "", "configure"], [94, 2, 1, "", "forward"]], "deeplay.models.DCGANDiscriminator": [[95, 2, 1, "", "forward"]], "deeplay.models.DCGANGenerator": [[96, 2, 1, "", "forward"]], "deeplay.models.GlobalMeanPool": [[97, 2, 1, "", "forward"]], "deeplay.models.MPM": [[103, 2, 1, "", "forward"]], "deeplay.models.RecurrentModel": [[105, 3, 1, "", "activation"], [105, 2, 1, "", "configure"], [105, 3, 1, "", "dropout"], [105, 2, 1, "", "forward"], [105, 3, 1, "", "hidden"], [105, 3, 1, "", "input"], [105, 3, 1, "", "layer"], [105, 3, 1, "", "normalization"], [105, 3, 1, "", "output"]], "deeplay.models.ViT": [[107, 2, 1, "", "forward"], [107, 3, 1, "", "hidden"], [107, 3, 1, "", "input"], [107, 3, 1, "", "output"]], "deeplay.module": [[109, 1, 1, "", "Config"], [110, 1, 1, "", "ConfigItem"], [111, 1, 1, "", "ConfigItemList"], [112, 1, 1, "", "DeeplayModule"], [113, 1, 1, "", "DetachedConfigItem"], [114, 1, 1, "", "Selection"], [115, 4, 1, "", "builder"]], "deeplay.module.Config": [[109, 2, 1, "", "add_detached_configuration"], [109, 2, 1, "", "prefix"], [109, 2, 1, "", "remove_derived_configurations"], [109, 2, 1, "", "set_for_tags"], [109, 2, 1, "", "take"], [109, 2, 1, "", "try_attach_detached_configurations"], [109, 2, 1, "", "update"]], "deeplay.module.ConfigItem": [[110, 2, 1, "", "prefix"], [110, 3, 1, "", "source_depth"]], "deeplay.module.DeeplayModule": [[112, 2, 1, "", "__call__"], [112, 2, 1, "", "available_styles"], [112, 2, 1, "", "build"], [112, 2, 1, "", "calling_stateful"], [112, 2, 1, "", "computed"], [112, 3, 1, "", "configurables"], [112, 2, 1, "", "configure"], [112, 2, 1, "", "create"], [112, 3, 1, "", "device"], [112, 3, 1, "", "dtype"], [112, 2, 1, "", "forward"], [112, 2, 1, "", "get_argspec"], [112, 2, 1, "", "get_from_user_config"], [112, 2, 1, "", "get_init_args"], [112, 2, 1, "", "get_signature"], [112, 2, 1, "", "get_subconfig"], [112, 2, 1, "", "get_user_configuration"], [112, 2, 1, "", "getitem_with_selections"], [112, 2, 1, "", "initialize"], [112, 3, 1, "", "is_constructing"], [112, 3, 1, "", "kwargs"], [112, 2, 1, "", "log_input"], [112, 2, 1, "", "log_output"], [112, 2, 1, "", "log_tensor"], [112, 3, 1, "", "logs"], [112, 2, 1, "", "new"], [112, 2, 1, "", "predict"], [112, 2, 1, "", "register_after_build_hook"], [112, 2, 1, "", "register_after_init_hook"], [112, 2, 1, "", "register_before_build_hook"], [112, 2, 1, "", "register_style"], [112, 2, 1, "", "replace"], [112, 3, 1, "", "root_module"], [112, 2, 1, "", "set"], [112, 2, 1, "", "set_input_map"], [112, 2, 1, "", "set_output_map"], [112, 2, 1, "", "set_root_module"], [112, 2, 1, "", "style"], [112, 2, 1, "", "styled"], [112, 3, 1, "", "tags"]], "deeplay.module.DetachedConfigItem": [[113, 2, 1, "", "prefix"], [113, 3, 1, "", "source_depth"]], "deeplay.module.Selection": [[114, 2, 1, "", "append"], [114, 2, 1, "", "append_dropout"], [114, 2, 1, "", "configure"], [114, 2, 1, "", "filter"], [114, 2, 1, "", "hasattr"], [114, 2, 1, "", "insert"], [114, 2, 1, "", "insert_dropout"], [114, 2, 1, "", "isinstance"], [114, 2, 1, "", "list_names"], [114, 2, 1, "", "log_input"], [114, 2, 1, "", "log_output"], [114, 2, 1, "", "prepend"], [114, 2, 1, "", "prepend_dropout"], [114, 2, 1, "", "remove"], [114, 2, 1, "", "remove_dropout"], [114, 2, 1, "", "replace"], [114, 2, 1, "", "set_dropout"], [114, 2, 1, "", "set_input_map"], [114, 2, 1, "", "set_output_map"]], "deeplay.ops": [[116, 1, 1, "", "Add"], [117, 1, 1, "", "Cat"], [118, 1, 1, "", "Flatten"], [119, 1, 1, "", "FromLogs"], [120, 1, 1, "", "Lambda"], [121, 1, 1, "", "MergeOp"], [122, 1, 1, "", "MultiheadCrossAttention"], [123, 1, 1, "", "MultiheadSelfAttention"], [124, 1, 1, "", "Permute"], [125, 1, 1, "", "Reshape"], [126, 1, 1, "", "Squeeze"], [127, 1, 1, "", "Unsqueeze"], [128, 1, 1, "", "View"]], "deeplay.ops.Add": [[116, 2, 1, "", "forward"]], "deeplay.ops.Cat": [[117, 2, 1, "", "forward"]], "deeplay.ops.Flatten": [[118, 2, 1, "", "forward"]], "deeplay.ops.FromLogs": [[119, 2, 1, "", "forward"]], "deeplay.ops.Lambda": [[120, 2, 1, "", "forward"]], "deeplay.ops.MergeOp": [[121, 2, 1, "", "forward"]], "deeplay.ops.MultiheadCrossAttention": [[122, 2, 1, "", "forward"]], "deeplay.ops.MultiheadSelfAttention": [[123, 2, 1, "", "forward"]], "deeplay.ops.Permute": [[124, 2, 1, "", "forward"]], "deeplay.ops.Squeeze": [[126, 2, 1, "", "forward"]], "deeplay.ops.Unsqueeze": [[127, 2, 1, "", "forward"]], "deeplay.ops.View": [[128, 2, 1, "", "forward"]], "deeplay.shapes": [[129, 1, 1, "", "Computed"], [130, 1, 1, "", "Variable"], [131, 4, 1, "", "reverse_two_operation"], [132, 4, 1, "", "two_operation"], [133, 4, 1, "", "unary_operation"]], "deeplay.shapes.Computed": [[129, 2, 1, "", "__call__"]], "deeplay.shapes.Variable": [[130, 2, 1, "", "__call__"]], "deeplay.trainer": [[134, 1, 1, "", "Trainer"]], "deeplay.trainer.Trainer": [[134, 2, 1, "", "disable_history"], [134, 3, 1, "", "history"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "terms": {"": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112, 114], "0": [12, 16, 20, 27, 37, 43, 46, 48, 49, 54, 56, 60, 61, 63, 65, 71, 78, 83, 84, 85, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 112, 134], "1": [2, 12, 14, 15, 16, 20, 23, 24, 37, 38, 41, 43, 44, 46, 48, 49, 54, 56, 60, 61, 63, 65, 78, 83, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 112, 130, 134], "10": [16, 56, 65, 97, 98, 99, 100, 101, 103, 107], "100": [16, 37, 96], "12": 107, "128": [43, 44, 46, 56], "16": [2, 16, 65, 95, 96, 97, 98, 99, 100, 101, 103, 134], "2": [12, 16, 20, 27, 37, 43, 44, 46, 49, 65, 95, 96, 97, 98, 99, 100, 101, 103, 107, 130], "20": [78, 98, 99, 100, 101, 103, 112], "200": 37, "256": [93, 94], "28": 56, "2d": [43, 44], "3": [37, 44, 46, 79, 93, 94, 97, 107, 130], "32": [16, 43, 44, 46, 107, 112, 134], "384": 107, "3g": 38, "4": [39, 65, 95, 96, 107], "40": [78, 112], "42": 112, "5": [20, 46], "6": [2, 12, 16], "6206e0": 38, "64": [43, 44, 46, 95, 96, 98, 99, 100, 101, 103, 112, 134], "7": 107, "8": [16, 95, 96, 98, 99, 100, 101, 103], "9": 20, "97": 20, "A": [2, 12, 14, 15, 16, 23, 24, 37, 63, 69, 70, 71, 78, 112, 114], "As": 112, "At": [12, 16, 78, 112], "But": [2, 16], "By": [16, 114], "For": [2, 12, 14, 15, 16, 23, 24, 43, 44, 46, 78, 79, 112, 114], "If": [2, 12, 16, 20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 57, 60, 61, 64, 65, 72, 73, 78, 79, 86, 94, 105, 107, 109, 112, 122, 123], "In": [2, 12, 14, 15, 16, 23, 24, 109], "It": [16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "The": [2, 12, 14, 15, 16, 20, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 93, 94, 95, 96, 105, 107, 112, 114, 130, 136], "There": [2, 12], "These": 20, "To": [2, 14, 15, 16, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "__call__": [16, 71, 88, 90, 112, 129, 130], "__extra_configurables__": 112, "__init__": [2, 14, 15, 16, 23, 24, 37, 112], "_and_": 73, "_conv_forward": 114, "_f": 112, "_x": 112, "abl": 16, "about": [2, 12], "abov": [2, 12], "acc": [12, 16], "acceler": [16, 134], "accept": [20, 47, 51, 114], "access": [37, 114], "accumul": 16, "accumulate_grad_batch": [2, 14, 15, 16, 23, 24, 37, 134], "accuraci": [12, 16], "acquir": 20, "across": [16, 20, 112], "activ": [27, 29, 30, 31, 32, 34, 35, 36, 42, 43, 44, 46, 48, 56, 60, 94, 95, 96, 98, 99, 100, 101, 103, 105, 107], "activelearn": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 135, 136], "activelearningcriterion": [3, 4, 5, 7, 8, 9, 10, 11, 13], "actual": [16, 78, 112], "ad": [40, 41], "add": [2, 12, 16, 70, 135], "add_dataloader_idx": 16, "add_detached_configur": 109, "add_imag": [12, 16], "add_self_loop": 70, "addit": [2, 12, 14, 15, 16, 23, 24, 39, 40, 78, 112], "adjac": [63, 69, 70], "adjust": [16, 78, 112], "advanc": 16, "adversari": [95, 96], "after": [2, 12, 16, 27, 43, 46, 72, 73, 78, 112], "after_last_lay": 46, "afterward": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "aggreg": 67, "all": [16, 25, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 78, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "allclos": 97, "allow": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "alpha": 20, "alreadi": 112, "also": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 56, 78, 112], "although": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "among": 112, "an": [2, 12, 16, 37, 41, 49, 63, 67, 78, 90, 105, 112], "ani": [2, 12, 14, 15, 16, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 44, 46, 47, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 98, 99, 100, 101, 103, 105, 109, 110, 112, 113, 119, 129], "annot": [1, 12], "annotate_random": 1, "anoth": 112, "anyth": [12, 16], "append": [16, 27, 37, 43, 46, 86, 114], "append_dropout": 114, "appli": [16, 20, 41, 43, 44, 46, 57, 78, 105, 112, 114, 122, 123], "applic": [12, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112, 135, 136], "apply_to_first": 46, "apply_to_first_lay": 44, "apply_to_last_lay": [43, 44], "ar": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 98, 99, 100, 101, 103, 105, 112, 114], "arbitrari": [2, 12], "arg": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "argmax": [12, 16], "argument": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 63, 64, 65, 67, 78, 79, 86, 94, 97, 105, 112], "around": 112, "arrai": [16, 20, 49, 112], "assert_not_positional_only_and_variad": 78, "assign": [2, 12, 112], "associ": [2, 16], "assum": [107, 112], "attempt": 16, "attent": [41, 57, 65, 107, 122, 123], "attn": [57, 122, 123], "attr": [90, 114], "attribut": [16, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 48, 50, 53, 54, 56, 60, 61, 64, 65, 71, 78, 79, 80, 86, 94, 98, 99, 100, 101, 103, 105, 107, 110, 113, 114, 134], "attribute1": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "attribute2": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "attribute_nam": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "attribute_valu": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "attrivut": 79, "auto": [16, 134], "automat": [2, 14, 15, 16, 23, 24, 78, 112], "automatic_optim": [2, 14, 15, 16, 23, 24], "avail": [2, 16, 112], "available_styl": 112, "averag": 53, "b": 20, "back": [12, 16], "backbon": [20, 98, 99, 100, 101, 103], "backward": [2, 16], "bar": [2, 14, 15, 16, 23, 24], "barebon": 134, "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134], "base_channel": 41, "baseblock": [27, 34], "basepredictionwrit": 16, "baseresidu": 28, "batch": [2, 12, 14, 15, 16, 20, 23, 24, 37, 49, 97, 100, 105, 107, 112], "batch_first": 105, "batch_idx": [2, 12, 14, 15, 16, 23, 24], "batch_index": [49, 57, 122, 123], "batch_progress": 38, "batch_siz": [16, 43, 44, 46, 65, 95, 96, 97, 100, 107, 112], "batchnorm": [27, 83, 84, 85], "batchnorm1d": [56, 83, 84, 85], "batchnorm2d": [27, 46, 83, 84, 85], "batchnorm3d": [83, 84, 85], "been": [12, 16, 112], "befor": [20, 74, 86, 112], "before_first": 46, "begin": 12, "behavior": [16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "below": [2, 16], "benchmark": 134, "beta": 20, "between": [2, 12, 16, 20], "between_loss": 20, "between_loss_weight": 20, "beyond": [78, 112], "bf16": 134, "bia": [56, 83, 84, 112], "bidirect": [60, 105], "bidirection": 105, "bit": [2, 16], "block": [25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 45, 46, 48, 54, 56, 60, 61, 65, 94, 95, 96, 105, 135, 136], "bool": [16, 38, 41, 43, 44, 46, 84, 95, 96, 105, 112, 114, 134], "boolean": 114, "both": [16, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "bottleneck": 45, "build": [16, 27, 34, 56, 65, 72, 74, 78, 93, 94, 95, 96, 112], "build_arguments_from": 78, "built": 112, "built_lay": [78, 112], "built_modul": [16, 78, 112], "cach": 37, "calcul": [2, 12, 14, 15, 16, 20, 23, 24], "call": [2, 12, 16, 20, 25, 27, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 73, 78, 79, 87, 88, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130], "call_with_dummy_data": [27, 34], "callabl": [20, 80, 112, 114, 129, 130, 131, 132, 133], "callback": [2, 16, 37, 38, 134, 135, 136], "calling_st": 112, "can": [2, 12, 14, 15, 16, 20, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 95, 96, 97, 105, 112, 130], "care": [16, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "case": [2, 12, 14, 15, 16, 23, 24, 109], "center": 20, "certain": 114, "ch_in": [43, 44, 46, 95], "ch_out": [43, 44, 46, 96], "chang": 46, "channel": [16, 20, 41, 43, 44, 79, 93, 94, 95, 96, 107], "channel_attent": 41, "check": [12, 114], "check_val_every_n_epoch": 134, "checkpoint": 112, "checkpointio": 134, "child": [16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 109, 112], "child_attribut": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "child_attribute_valu": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "child_modul": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "child_module_attribut": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "children": [16, 112], "choos": [2, 16], "cl": [91, 114, 115], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134], "class_conditioned_model": [95, 96], "classmethod": [20, 79, 112], "classtyp": [78, 79, 114], "clear": 37, "clone_metr": 16, "close": 20, "closur": [2, 16], "clusterenviron": 134, "cnn": 46, "collect": [2, 12, 112], "combin": 42, "combinelayeractiv": [63, 67], "commonli": 56, "commun": 16, "complet": [16, 78, 112], "compon": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 135, 136], "comput": [2, 14, 15, 16, 23, 24, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "compute_imq": 24, "compute_kernel": 24, "compute_loss": [16, 17, 18, 19, 20, 21, 23, 24], "compute_mmd": 24, "condit": [2, 16, 41, 95, 96, 114], "config": [43, 44, 46], "configitem": 111, "configitemlist": 109, "configur": [2, 16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 48, 50, 54, 60, 61, 64, 66, 78, 79, 86, 94, 112, 114], "configure_optim": [2, 16], "connect": 56, "consist": [20, 41, 98, 99, 100, 101, 103], "consistenct": 20, "console_kwarg": 38, "constant": 20, "construct": [90, 112], "contain": [2, 16, 40, 98, 99, 100, 101, 103, 112], "context": 41, "context_embedding_dim": 41, "control": [2, 14, 15, 16, 23, 24, 95, 96], "conv": [84, 85], "conv1d": [84, 85], "conv2d": [79, 84, 85, 114], "conv3d": [84, 85], "conv4": 16, "conv5": 16, "convblock": 95, "convolut": [27, 34, 43, 44, 46, 79, 95, 96], "convolutionaldecoder2d": 96, "convolutionalencoder2d": [92, 93, 95], "convolutionalencoderdecoder2d": [66, 94], "convolutionalneuralnetwork": [43, 44], "convtranspose1d": [84, 85], "convtranspose2d": [27, 43, 84, 85], "convtranspose3d": [84, 85], "convtransposeblock": 96, "coordin": 20, "core": [16, 37], "correct": [2, 12, 16], "correspond": [2, 16, 41, 112], "could": [2, 16], "creat": [16, 20, 72, 78, 97, 98, 99, 100, 101, 103, 107, 112], "create_data": 16, "create_optimizer_with_param": 16, "criterion": [5, 11, 13], "crop": 20, "cross": 41, "crucial": [16, 78, 112], "current": [16, 78, 112], "current_config": 112, "custom": [2, 16, 43, 44, 46, 47, 51, 105, 112], "cutoff": 20, "cyclegan": [93, 94], "d": [2, 12, 14, 15, 16, 23, 24, 109], "data": [2, 12, 14, 15, 16, 23, 24, 27, 34, 40, 98, 99, 100, 101, 103, 105, 112], "databas": 16, "dataload": [2, 12, 14, 15, 16, 23, 24], "dataloader_idx": [2, 12, 14, 15, 16, 23, 24], "dataset": [1, 6, 12, 16, 20, 112], "dcgan": [95, 96], "dcgan_discrimin": 95, "ddp": 16, "ddp_spawn": 16, "deadlock": 16, "debug": 112, "dec": 43, "decid": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "decod": [2, 14, 15, 16, 23, 24, 41, 43, 45], "decor": [71, 72, 73, 74, 75, 112, 135, 136], "deep": [95, 96], "deepcopi": 71, "deeplai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "deeplaymodul": [16, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 78, 79, 86, 94, 97, 103, 105, 107, 109, 113, 114, 119, 121, 122], "deepspe": [2, 14, 15, 16, 23, 24], "def": [2, 12, 14, 15, 16, 23, 24, 37, 79, 112], "default": [2, 12, 16, 20, 27, 34, 41, 43, 44, 46, 56, 65, 79, 98, 99, 100, 101, 103, 105, 107, 112, 114, 130], "default_root_dir": 134, "defin": [20, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "degre": [69, 70], "deleg": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "dens": [56, 107], "dense_top": 107, "descript": 38, "design": [105, 112], "detach": [16, 112], "detachedconfigitem": 111, "detail": [16, 43, 44, 46, 135], "detect": 20, "detect_anomali": 134, "detect_singl": 20, "determin": 16, "determinist": 134, "devic": [16, 112, 134], "dict": [2, 12, 14, 15, 16, 23, 24, 40, 41, 47, 80, 98, 99, 100, 101, 103, 109, 112, 134], "dictionari": [2, 12, 14, 15, 16, 23, 24, 40, 103, 112], "differ": [78, 105, 112], "dim": [12, 16], "dimens": [41, 95, 96], "direct": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "directli": [16, 20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "disabl": [12, 16, 134], "disable_histori": 134, "disagr": 20, "discrimin": [93, 95], "disk": 16, "distanc": 98, "distribut": [2, 12, 16], "divid": 107, "dl": [16, 37, 78, 98, 99, 100, 101, 103, 107, 112], "dm": 16, "do": [2, 12, 14, 15, 16, 20, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "document": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 103, 105, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134], "doe": [109, 114], "don": [12, 16], "download": [2, 12], "dropout": [31, 36, 46, 50, 56, 60, 105], "dtype": 112, "dummi": [27, 34], "dure": [16, 37, 73, 78, 112], "dynam": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "e": [2, 14, 15, 16, 23, 24, 109], "each": [16, 46, 49, 52, 53, 55, 56, 59, 62, 65, 68, 69, 70, 98, 99, 100, 101, 103, 105, 107], "earli": 16, "edg": [52, 53, 55, 59, 62, 63, 67, 68, 70, 98, 99, 100, 101, 103], "edge_attr": [52, 53, 55, 59, 62, 68, 98, 99, 100, 101, 103], "edge_in_featur": [98, 99, 100, 101, 103], "edge_index": [52, 53, 55, 59, 62, 68, 98, 99, 100, 101, 103], "edgefeat": 63, "effect": [78, 112], "either": [20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 109, 112], "element": [39, 40, 49], "embed": [41, 95, 96, 105], "embedd": 107, "embedding_dim": [95, 96], "enabl": [12, 16, 41], "enable_checkpoint": 134, "enable_graph": 16, "enable_model_summari": 134, "enable_progress_bar": 134, "enc": 44, "encod": [2, 14, 15, 16, 23, 24, 41, 44, 45, 65, 98, 99, 100, 101, 103, 107], "end": [2, 12, 16, 20, 37, 86], "enforc": [2, 16], "engin": 134, "enhanc": 112, "ensur": [16, 78, 112], "epoch": [2, 12, 16, 37], "epoch_mean": 37, "equival": [45, 46, 48, 54, 56, 60, 61, 65, 105, 107], "error": 16, "especi": 112, "essenti": [16, 78, 112], "etc": [16, 78, 112], "eval": [12, 16], "everi": [2, 16, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "examin": 112, "exampl": [2, 12, 14, 15, 23, 24, 37, 49, 114], "example_imag": [12, 16], "examplemodul": [16, 78, 112], "except": 105, "exclud": 114, "exist": [16, 78, 112], "expect": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "expected_input_shap": 27, "experi": [12, 16, 20], "explicitli": 16, "express": 130, "extend": [86, 112], "extendedconstructormeta": [91, 112], "extens": [16, 112], "extern": [16, 76, 77, 79, 80, 81, 82, 112, 135, 136], "extra": [47, 51], "extra_repr": [47, 51], "f": [109, 112], "fake": 2, "fals": [2, 14, 15, 16, 23, 24, 38, 43, 44, 46, 56, 95, 96, 105, 109, 114, 134], "fan_out": 84, "fancier": [2, 14, 15, 16, 23, 24], "fast_dev_run": 134, "featur": [16, 41, 43, 44, 46, 52, 53, 55, 56, 59, 62, 63, 65, 67, 68, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107], "feature_dim": 96, "features_dim": [95, 96], "feed": 65, "feed_forward": 65, "fetch_embed": 49, "fill_bia": 84, "filter": 114, "final": [16, 78, 105, 112], "find": [20, 136], "find_local_maxima": 20, "first": [2, 16, 20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 107, 112, 114], "fit": [2, 12, 16, 37], "flag": 41, "flexibl": 105, "float": [16, 20, 83, 84, 85, 105, 134], "float16": 134, "follow": [2, 12, 63, 67, 98, 99, 100, 101, 103, 109, 136], "former": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "forward": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 78, 79, 87, 89, 92, 93, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128], "found": [2, 16, 112], "four": [95, 96], "free": 37, "frequenc": [2, 16], "fresh": 112, "from": [12, 16, 20, 37, 43, 44, 46, 78, 79, 86, 98, 99, 100, 101, 103, 107, 109, 112, 114], "fromdict": [98, 99, 100, 101, 103], "fulli": [16, 56, 78, 112, 130], "func": [71, 72, 73, 74, 75, 80, 112, 114, 129, 130], "function": [2, 16, 20, 25, 27, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 79, 87, 88, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130], "g": [2, 14, 15, 16, 23, 24], "gan": [2, 14, 15, 16, 23, 24], "gelu": 105, "gener": [12, 16, 78, 86, 87, 88, 89, 94, 95, 96, 112], "geometr": [20, 98, 99, 100, 101, 103], "get": [63, 67, 112], "get_annotated_data": 1, "get_annotated_label": 1, "get_annotated_sampl": 1, "get_argspec": [78, 112], "get_default_activ": [27, 34], "get_default_merg": [27, 34], "get_default_norm": [27, 34], "get_default_shortcut": [27, 34], "get_detection_scor": 20, "get_forward_arg": [42, 63, 67], "get_from_user_config": 112, "get_init_arg": [78, 112], "get_num_annot": 1, "get_signatur": [78, 112], "get_subconfig": 112, "get_unannotated_data": 1, "get_unannotated_label": 1, "get_unannotated_sampl": 1, "get_user_configur": 112, "getitem_with_select": 112, "give": 16, "given": [16, 41, 69, 70, 86, 112], "global": [97, 100, 112], "goe": [12, 16], "gpu": [2, 14, 15, 16, 23, 24], "gradient": [12, 16], "gradient_clip_algorithm": 134, "gradient_clip_v": 134, "gradient_penalti": 2, "graph": [16, 63, 69, 70, 97, 98, 99, 100, 101], "graphtonodesmpm": 101, "grey54": 38, "grey70": 38, "grid": [12, 16], "group": 16, "gru": 105, "h": 20, "ha": [2, 12, 14, 15, 16, 23, 24, 78, 109, 112], "handl": [2, 16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "happen": 16, "hardwar": [2, 12], "hasattr": 114, "have": [2, 12, 16, 20, 112, 114], "head": [41, 65, 98, 99, 100, 101, 103, 107], "height": 20, "helper": 66, "here": [2, 12, 14, 15, 16, 23, 24, 37, 112, 136], "hidden": [43, 44, 46, 48, 54, 56, 60, 61, 65, 94, 95, 96, 98, 99, 100, 101, 103, 105, 107], "hidden_channel": 46, "hidden_featur": [56, 65, 98, 99, 100, 101, 103, 105, 107], "histori": [37, 134], "hook": [2, 16, 25, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "how": [2, 16], "howev": [2, 12, 114], "i": [2, 12, 14, 15, 16, 20, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 49, 50, 54, 56, 57, 60, 61, 63, 64, 65, 78, 79, 86, 90, 94, 95, 96, 105, 107, 109, 112, 114, 122, 123, 130, 136], "ident": [16, 43, 44, 46, 56, 57, 98, 99, 100, 101, 103, 107, 122, 123], "ignor": [20, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "imag": [12, 16, 20, 93, 94, 107], "image_s": 107, "immedi": [16, 72, 73, 74], "implement": [2, 12, 14, 15, 16, 47, 51, 112], "improp": 16, "in_channel": [41, 43, 44, 46, 79, 93, 94, 107], "in_featur": [56, 65, 78, 105, 112], "includ": [2, 12, 14, 15, 16, 23, 24, 41, 114], "include_layer_classtyp": 114, "independ": [78, 112], "index": [2, 12, 14, 15, 16, 23, 24, 49, 70, 86, 103], "indic": [1, 20, 49], "infer": [16, 43, 44, 46, 56, 65, 98, 99, 100, 101, 103, 107, 112], "inference_mod": 134, "inform": [2, 12, 41, 47, 51], "init": 73, "initi": [12, 16, 78, 79, 83, 84, 85, 112, 135, 136], "initialize_tensor": [83, 84, 85], "inp": [98, 99, 100, 101, 103], "input": [16, 20, 39, 41, 43, 44, 46, 48, 51, 54, 56, 57, 60, 61, 65, 78, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 114, 122, 123], "input_block": 46, "input_channel": 95, "input_data": 112, "input_seq": 65, "input_shap": 107, "insert": [46, 86, 114], "insert_dropout": 114, "insid": 130, "inspect": 112, "instanc": [2, 16, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 78, 79, 87, 89, 90, 92, 94, 95, 96, 97, 103, 105, 107, 112, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "instance_count": 71, "instanti": [16, 78, 112], "instead": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 74, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "int": [16, 20, 26, 27, 38, 41, 43, 44, 46, 56, 65, 86, 93, 94, 95, 96, 98, 99, 100, 101, 103, 105, 107, 112, 129, 130, 131, 132, 134], "integ": [2, 12, 130], "integr": 41, "intellig": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "intend": 112, "interest": [12, 16], "intern": [2, 14, 15, 16, 23, 24, 78, 112], "interv": [2, 16], "inverse_fn": 20, "is_construct": 112, "isinst": 114, "item": [12, 16], "iter": [2, 12, 14, 15, 16, 23, 24, 80, 86, 109, 111, 134], "its": [2, 12, 16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 49, 50, 54, 56, 60, 61, 64, 65, 69, 70, 78, 79, 86, 94, 105, 112], "itself": [16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "just": 41, "k": 109, "keep": 37, "keep_list": 109, "kei": [2, 12, 14, 15, 16, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 109, 112, 114], "kera": 37, "kernel": 46, "kernel_s": [27, 43, 46, 114], "keyword": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "kind": 16, "know": [2, 16], "known": [56, 79, 130], "kwarg": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "kwd": 66, "l": 37, "l1loss": 20, "label": [95, 96], "labels_hat": [12, 16], "lack": 109, "lambda": 112, "larg": 112, "larger": 112, "last": [46, 48, 54, 56, 60, 61, 65, 105, 107], "latent": 96, "latent_dim": 96, "latter": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "layer": [16, 27, 29, 30, 31, 32, 33, 35, 36, 42, 43, 44, 45, 46, 48, 50, 54, 56, 57, 60, 61, 65, 78, 88, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 114, 122, 123], "layerlist": [87, 89], "layersync": 134, "lazi": 79, "lbfg": [2, 16], "lead": 16, "leaky_relu": 105, "learn": [2, 16, 20], "learningratemonitor": [2, 16], "leav": 38, "len": [12, 16], "length": [105, 112], "lightn": [2, 12, 16, 37], "lightningmodul": [2, 16, 37], "like": [2, 12, 14, 15, 16, 20, 23, 24, 37, 43, 44, 46, 56, 78, 98, 99, 100, 101, 103, 107, 112], "limit_predict_batch": 134, "limit_test_batch": 134, "limit_train_batch": 134, "limit_val_batch": 134, "line": [47, 51], "linear": [16, 46, 56, 78, 84, 85, 112], "list": [2, 16, 26, 29, 30, 31, 32, 35, 36, 41, 43, 44, 46, 50, 56, 64, 65, 80, 86, 87, 88, 89, 98, 99, 100, 101, 103, 107, 109, 110, 111, 112, 134, 135, 136], "list_nam": 114, "liter": [16, 29, 30, 31, 32, 33, 35, 36, 42, 46, 50, 64, 105, 134], "load": [16, 112], "local": 20, "local_consist": 20, "log": [2, 12, 16, 37, 112], "log_dict": [12, 16], "log_every_n_step": 134, "log_input": [112, 114], "log_metr": 16, "log_output": [112, 114], "log_tensor": 112, "log_var": 23, "logger": [2, 12, 14, 15, 16, 20, 23, 24, 134], "logger_kwarg": 16, "loghistori": 16, "logic": [16, 112], "long": [97, 100], "loop": 70, "loss": [2, 12, 14, 15, 16, 20, 23, 24, 37], "lr": [2, 16], "lr_schedul": [2, 16], "lr_scheduler_config": [2, 16], "lstm": 105, "made": [2, 16], "magik": 98, "mai": 16, "make": [60, 105, 112], "make_grid": [12, 16], "manag": 112, "mani": [2, 16], "manual": [2, 14, 15, 16, 23, 24], "map": [20, 41], "mask": 20, "match": [20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "matrix": [57, 63, 69, 70, 122, 123], "max": 20, "max_epoch": [16, 134], "max_step": 134, "max_tim": 134, "maxima": 20, "maximum": [16, 52], "maxpool2d": [27, 43, 44, 46], "mean": [2, 14, 15, 16, 23, 24, 37, 85, 97], "measur": 20, "mechan": 41, "memo": 112, "memori": 37, "merg": [27, 34], "mergeop": [27, 34, 116, 117, 120], "messag": [98, 99, 100, 101, 103], "messagepassingneuralnetwork": [98, 99, 100, 101, 103], "meta": [90, 91, 112, 135, 136], "metaclass": 90, "method": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 103, 107, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134], "metric": [2, 14, 15, 16, 20, 23, 24, 37, 38], "metric_attribut": 16, "metric_to_track": [2, 16], "metric_v": [2, 16], "metrics_format": 38, "metrics_preprocess": [16, 17], "metrics_text_delimit": 38, "might": [2, 12, 16], "min_epoch": 134, "min_step": 134, "minimum": 55, "mix": [16, 134], "mlp": [46, 56, 98, 99, 100, 101, 103], "mode": [2, 12, 16, 20, 27, 43, 46, 84], "model": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 37, 41, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 135, 136], "modifi": [16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 75, 78, 79, 86, 94, 105, 112], "modul": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 80, 83, 84, 85, 86, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 135, 136], "modulelist": 86, "monitor": [2, 16], "more": [2, 12, 16, 43, 44, 46], "most": [16, 78, 112], "mpm": [98, 99, 100, 101], "mpn": [63, 67, 99, 100, 101, 103], "mu": 23, "multi": [2, 14, 15, 16, 23, 24, 47, 51, 56], "multihead": [57, 65, 107, 122, 123], "multiheadcrossattent": 123, "multilayerperceptron": [98, 99, 100, 101, 102, 103, 104, 106, 107, 108], "multipl": [2, 12, 14, 15, 16, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "must": [2, 12, 14, 15, 16, 23, 24, 40, 105], "mycallback": 37, "mylightningmodul": 37, "mymodel": 16, "mymodul": 112, "n": [1, 2, 12, 14, 15], "n_residual_block": 94, "n_transform": 20, "name": [2, 16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 83, 84, 85, 86, 90, 94, 105, 109, 112, 114], "named_children": 16, "ndarrai": 1, "necessari": [2, 12, 16, 78, 112], "need": [2, 12, 16, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "network": [46, 48, 54, 56, 60, 61, 65, 95, 96, 97, 99, 100, 101, 103, 105, 107], "neural": [46, 56, 97, 99, 100, 101, 103, 105], "new": [12, 16, 72, 78, 112, 114], "newli": [16, 78, 112], "next": [2, 12, 14, 15, 16, 23, 24], "nn": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 43, 44, 46, 56, 57, 78, 79, 83, 84, 85, 86, 98, 99, 100, 101, 103, 105, 107, 112, 114, 122, 123], "node": [52, 53, 55, 59, 62, 63, 67, 68, 69, 70, 97, 98, 99, 100, 101, 103], "node_in_featur": [98, 99, 100, 101, 103], "non": 114, "none": [2, 12, 14, 15, 16, 20, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 46, 50, 56, 57, 64, 65, 78, 79, 86, 95, 96, 105, 107, 109, 110, 112, 122, 123, 130, 134], "nonlinear": 84, "normal": [2, 12, 14, 15, 16, 20, 23, 24, 27, 30, 31, 32, 34, 35, 36, 37, 45, 46, 48, 50, 56, 60, 69, 70, 105], "note": [2, 12, 14, 15, 16, 23, 24, 37, 78, 98, 99, 100, 101, 103, 112, 114], "now": [16, 78, 112], "num_attention_head": 41, "num_class": [41, 95, 96], "num_edg": [98, 99, 100, 101, 103], "num_featur": 97, "num_head": [65, 107], "num_nod": [70, 97, 98, 99, 100, 101, 103, 134], "num_output": 20, "num_sanity_val_step": 134, "number": [16, 20, 41, 43, 44, 46, 56, 65, 79, 93, 94, 95, 96, 98, 99, 100, 101, 103, 105, 107], "numpi": 16, "obj": 91, "object": [0, 16, 20, 71, 72, 75, 78, 98, 99, 100, 101, 103, 110, 112, 113, 129, 130], "ocl": 79, "often": [2, 16], "on_epoch": 16, "on_step": 16, "on_train_batch_end": 37, "on_train_end": 20, "on_train_epoch_end": 37, "on_train_start": 12, "on_validation_epoch_end": 37, "one": [2, 12, 16, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 78, 79, 86, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "onli": [2, 12, 14, 15, 16, 23, 24, 73, 78, 112, 114], "oom": 16, "op": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 135, 136], "oper": [12, 16, 27, 34, 40, 130], "opt1": [2, 14, 15, 16, 23, 24], "opt2": [2, 14, 15, 16, 23, 24], "optim": [2, 14, 15, 16, 20, 23, 24, 76, 77, 81, 82], "optimizer_step": [2, 16], "option": [2, 16, 20, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112, 114, 130], "order": [26, 29, 30, 31, 32, 35, 36, 50, 64], "organ": 136, "origin": 112, "other": [16, 78, 105, 112], "otherwis": [57, 122, 123], "out": [2, 12, 14, 15, 16, 23, 24, 103, 112], "out1": 97, "out2": 97, "out_activ": [43, 44, 46, 56, 98, 99, 100, 101, 103, 105, 107], "out_channel": [41, 43, 44, 46, 94, 107], "out_featur": [56, 65, 78, 98, 99, 100, 101, 103, 105, 107, 112], "output": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 37, 41, 43, 44, 46, 48, 54, 56, 57, 60, 61, 65, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 122, 123], "output_block": 46, "output_channel": 96, "output_devic": 112, "output_shap": 107, "outsid": [41, 112], "over": 16, "overfit_batch": 134, "overhead": 16, "overload": 66, "overrid": [2, 16], "overridden": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "own": [12, 16, 47, 51], "packag": [135, 136], "pad": [27, 43], "pair": 16, "parallel": [98, 99, 100, 101, 103], "param": [16, 80], "param1": 112, "param2": 112, "paramet": 80, "paramref": [2, 12], "particularli": [16, 78, 112], "pass": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 78, 79, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "patch": 107, "patch_embedd": 107, "patch_siz": 107, "patchifi": 107, "path": 134, "pattern": [2, 12, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "per": 16, "perceptron": 56, "perform": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "permut": 16, "permute_target_channel": 16, "persist": 112, "pixel": 107, "pl_modul": 37, "place": [16, 78, 112], "plot": 37, "plugin": 134, "point": [78, 112], "pool": [2, 12, 14, 15, 20, 27, 35, 43, 44, 45, 46, 97, 100, 103], "pop": 86, "posit": [2, 12, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 107, 112], "position_embedding_dim": 41, "positional_embedd": 107, "positionalembed": [49, 107], "possibl": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "postprocess": 44, "precis": [2, 16, 134], "pred": 20, "predict": [16, 20, 112], "predict_step": 16, "prefix": [109, 110, 113], "prepare_data": [2, 12], "prepend": [27, 46, 114], "prepend_dropout": 114, "preprocess": 43, "present": 109, "prevent": 16, "primarili": [16, 78, 112], "print": [16, 47, 51, 103], "probabl": [0, 3, 4, 5, 7, 8, 9, 10, 11, 13, 16], "process": [2, 12, 16, 43, 44, 46, 56, 65, 78, 93, 94, 95, 96, 98, 99, 100, 101, 103, 107, 112, 134], "processing_spe": 38, "produc": [2, 12, 14, 15, 16, 23, 24], "product": 59, "profil": 134, "prog_bar": 16, "progress": [2, 14, 15, 16, 23, 24], "progress_bar": 38, "progress_bar_finish": 38, "progress_bar_puls": 38, "project": [57, 122, 123], "propag": [48, 54, 61, 64], "properti": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 112, 114], "provid": [16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "put": [12, 16], "python": 86, "pytorch": [2, 12, 16, 37, 105], "quantil": 20, "queri": [2, 12, 14, 15], "query_and_upd": 12, "query_strategi": [2, 12, 14, 15], "query_train": 12, "query_v": 12, "quickli": [12, 16], "r": 37, "rais": 66, "randint": [98, 99, 100, 101, 103], "randn": [39, 65, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 107], "random": 1, "rank": 16, "rank_zero_onli": 16, "rate": [2, 16], "rather": [78, 112], "ratio": 20, "re": [47, 51], "readi": [16, 78, 112], "real": [2, 114], "receiv": [52, 53, 55, 59, 62, 63, 68], "recip": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "recogn": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "recommend": [12, 16], "recurr": 105, "recurrentneuralnetwork": 105, "reduc": [16, 20], "reduce_fx": 16, "reducelronplateau": [2, 16], "reduct": 16, "refer": [16, 43, 44, 46], "refresh_r": 38, "regist": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "register_after_build_hook": 112, "register_after_init_hook": 112, "register_before_build_hook": 112, "register_comput": 79, "register_styl": 112, "rel": 49, "relev": [78, 112], "reload": [2, 12], "reload_dataloaders_every_n_epoch": [2, 12, 134], "relu": [16, 43, 44, 46, 56, 78, 84, 105, 112], "remain": 112, "remov": [86, 114], "remove_derived_configur": 109, "remove_dropout": 114, "remove_lay": 27, "remove_pool": 27, "remove_upsampl": 27, "reparameter": 23, "replac": [16, 49, 112, 114], "replacementmodul": 112, "repres": [112, 130], "represent": [47, 51], "requir": [2, 14, 15, 16, 23, 24], "reset": 12, "reset_metr": 16, "reset_model": 12, "residu": 94, "respect": 41, "restor": [16, 112], "restructuredtext": 135, "result": 130, "retriev": 112, "return": [2, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 34, 37, 45, 48, 49, 54, 57, 60, 61, 79, 105, 122, 123, 134], "return_attn": [57, 122, 123], "richprogressbarthem": 38, "rnn": 105, "rnn_type": 105, "root": 112, "root_modul": 112, "run": [2, 16, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 74, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "safe": 71, "sake": 41, "same": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 40, 49, 57, 78, 112, 122, 123], "sampl": [1, 2, 12], "sample_img": [12, 16], "sampler": [2, 12], "saniti": 12, "satisfi": 114, "save": 112, "scale": 16, "schedul": [2, 16], "score": [0, 3, 4, 5, 7, 8, 9, 10, 11, 13, 20], "scratch": 12, "second": [2, 16, 112], "section": [2, 12, 136], "see": [2, 12, 16, 135], "select": [98, 99, 100, 101, 103, 112], "selector": [98, 99, 100, 101, 103, 112], "self": [2, 12, 14, 15, 16, 20, 23, 24, 27, 37, 41, 43, 44, 57, 70, 71, 88, 112, 122, 123, 129, 130], "sender": 63, "separ": [97, 114], "seq": 105, "seq_len": 65, "sequenc": [16, 105, 107], "sequentialblock": [29, 30, 31, 32, 33, 35, 36, 50, 64, 114], "serv": [16, 78, 112], "set": [2, 12, 16, 20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112, 130], "set_dropout": 114, "set_for_tag": 109, "set_input_map": [26, 86, 112, 114], "set_output_map": [26, 86, 112, 114], "set_root_modul": 112, "setup": [2, 12, 16, 78, 112], "shape": [16, 20, 43, 44, 46, 56, 65, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 107, 112, 129, 130, 131, 132, 133, 135, 136], "shapeop": [118, 124, 126, 127, 128], "shortcut": [27, 34], "should": [2, 16, 20, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 130], "shown": [2, 16], "sigmoid": [16, 43, 44, 46, 78, 105, 112], "signal": 79, "signatur": 112, "signific": 16, "silent": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "similar": [2, 16], "simpl": 105, "simpli": [2, 16], "sinc": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "singl": [2, 12, 16, 20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "size": [2, 16, 20, 46, 49, 65, 97, 98, 99, 100, 101, 103, 107, 112], "skip": [2, 12, 14, 15, 16, 23, 24, 33, 50], "slice": 86, "so": [12, 16], "softmax": [56, 105], "some": [2, 14, 15, 16, 23, 24], "some_other_valu": 112, "some_valu": 112, "someth": [2, 14, 15, 16, 23, 24, 37], "sourc": [109, 110, 113], "source_depth": [110, 113], "space": 96, "spawn": 16, "special": [2, 14, 15, 16, 23, 24], "specif": [1, 2, 14, 15, 16, 23, 24, 43, 44, 46, 56, 98, 99, 100, 101, 103, 107, 112], "specifi": [2, 12, 16, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "split": [2, 12], "squar": 107, "stack": 37, "state": [2, 12, 16, 112], "static": [16, 20], "std": 85, "step": [2, 12, 14, 15, 16, 23, 24, 37, 41, 78, 112], "step_histori": 37, "steps_per_epoch": 16, "still": 41, "stop": [2, 16], "store": [73, 112], "str": [16, 26, 29, 30, 31, 32, 33, 35, 36, 40, 42, 47, 50, 51, 64, 79, 80, 84, 86, 98, 99, 100, 101, 103, 109, 110, 112, 113, 114, 134], "strategi": [2, 14, 15, 16, 134], "strict": [2, 16, 114], "stride": [27, 43, 44, 46], "string": [20, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "structur": [16, 105], "style": 112, "subclass": [16, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 78, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "subsequ": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "sum": [12, 16, 53, 68], "summari": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 103, 105, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134], "super": [2, 14, 15, 16, 23, 24, 37, 112], "supervis": 20, "support": [2, 14, 15, 16, 20, 23, 24, 105], "swap": 112, "switch": [2, 12, 14, 15, 16, 23, 24], "sync": 16, "sync_batchnorm": 134, "sync_dist": 16, "sync_dist_group": 16, "syntax": 135, "t": [12, 16, 37, 41, 86, 87, 88, 89, 90], "tag": [109, 110, 112, 113], "take": [25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 109, 112, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "take_subconfig": 109, "tanh": 105, "target": [16, 83, 84, 85, 109, 112], "tel": 65, "tell": [12, 16], "templat": [43, 44, 46, 56, 98, 99, 100, 101, 103, 107], "tensor": [2, 12, 14, 15, 16, 17, 20, 23, 24, 39, 43, 44, 46, 56, 57, 65, 79, 83, 84, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 119, 122, 123, 130], "test": [12, 16, 107], "test_acc": [12, 16], "test_dataload": 12, "test_loss": [12, 16], "test_preprocess": [16, 20], "test_step": [12, 16], "text": [12, 16], "than": [78, 112], "thei": 114, "them": [2, 16, 25, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "theme": 38, "thi": [2, 12, 14, 15, 16, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 78, 79, 86, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 109, 112, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 130], "thing": [2, 14, 15, 16, 23, 24], "threshhold": 20, "threshold": 20, "thu": [2, 16], "time": [38, 41, 79], "timedelta": 134, "top": 107, "torch": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 37, 39, 65, 78, 83, 84, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112], "torch_geometr": 40, "torchmetr": 16, "torchvis": [12, 16], "tpu": [2, 14, 15, 16, 23, 24], "track": 37, "train": [2, 12, 14, 15, 16, 20, 23, 24, 37, 134], "train_data": 16, "train_dataload": [2, 12, 37], "train_loss": 16, "train_loss_epoch": 37, "train_preprocess": [16, 20], "trainabl": 20, "trainer": [2, 12, 16, 37, 135, 136], "training_epoch_mean": 37, "training_step": [2, 14, 15, 16, 23, 24, 37], "training_step_output": 37, "transform": [20, 48, 54, 61, 64, 65, 107, 134], "transform_data": 20, "transformer_encod": 107, "transformerencoderlay": 107, "transpos": [27, 96], "treshhold": 20, "tri": [2, 12], "trigger": [16, 78, 112], "trim_deriv": 109, "trim_tag": 109, "true": [2, 16, 27, 41, 44, 46, 57, 84, 97, 105, 112, 114, 122, 123, 134], "try_attach_detached_configur": 109, "tupl": [2, 16, 27, 40, 46, 47, 83, 84, 85, 97, 109, 110, 112, 113, 129], "two": [2, 16, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 98, 99, 100, 101, 103, 105, 112], "type": [27, 79, 83, 84, 85, 90, 105, 114], "typic": 105, "unchang": 112, "undefin": 16, "unet": 41, "union": [105, 112], "uniqu": 16, "unit": [2, 16, 43, 44, 46, 56, 65, 98, 99, 100, 101, 103, 107], "unless": [2, 12], "unlik": [16, 78, 112], "up": 37, "updat": [2, 12, 16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 109, 112], "upsampl": [27, 32, 43, 45], "us": [2, 12, 14, 15, 16, 20, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112, 130, 135], "use_distributed_sampl": 134, "user": [16, 112], "usual": 130, "util": [12, 16, 112], "v": [20, 109], "val": [12, 16, 37], "val_acc": [12, 16], "val_batch_s": 16, "val_check_interv": 134, "val_data": 16, "val_dataload": 37, "val_loss": [2, 12, 16], "val_preprocess": [16, 20], "val_steps_per_epoch": 16, "valid": [12, 16, 26, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "validate_after_build": 28, "validation_step": [12, 16], "valu": [2, 3, 12, 16, 26, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 48, 50, 54, 60, 61, 64, 78, 79, 86, 105, 109, 110, 112, 113, 130], "value1": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "value2": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "valueerror": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "var": 16, "variabl": [131, 132, 133], "variou": 105, "view": 125, "vision": 107, "w": [20, 37], "want": 12, "warn": [2, 16, 134], "we": [12, 16], "weight": [20, 68, 83, 112], "well": 16, "what": [2, 16], "whatev": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "when": [2, 12, 14, 15, 16, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 66, 78, 79, 86, 94, 105, 112], "where": [20, 49, 78, 112], "wherea": [2, 16], "whether": [16, 95, 96, 114], "which": [2, 12, 14, 15, 16, 20, 23, 24, 78, 112], "while": [16, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "white": 38, "whose": [2, 16, 90], "width": 20, "wise": [39, 40], "within": [16, 20, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 78, 79, 87, 89, 92, 94, 95, 96, 97, 103, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128], "within_loss": 20, "within_loss_weight": 20, "without": [2, 16], "won": 16, "work": [2, 16, 78, 112], "wrapper": 112, "write": 16, "x": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 79, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 130], "x1": 24, "x2": 24, "x_1": 6, "x_2": 6, "xdoctest": 16, "y": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 40, 41, 57, 93, 94, 95, 96, 122, 123, 130], "y_1": 6, "y_2": 6, "y_hat": [16, 17, 18, 19, 20, 21, 23, 24], "y_pred": 20, "yield": 16, "you": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 37, 47, 51, 136], "your": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 47, 51, 112, 135], "yourself": [2, 12, 16], "yscale": 37, "z": [2, 14, 15, 16, 23, 24]}, "titles": ["ActiveLearningCriterion", "ActiveLearningDataset", "AdversarialStrategy", "Constant", "Entropy", "FractionCriterion", "JointDataset", "L1Upper", "L2Upper", "LeastConfidence", "Margin", "ProductCriterion", "Strategy", "SumCriterion", "UncertaintyStrategy", "UniformStrategy", "Application", "BinaryClassifier", "CategoricalClassifier", "Classifier", "LodeSTAR", "MultiLabelClassifier", "Regressor", "VariationalAutoEncoder", "WassersteinAutoEncoder", "BaseResidual", "Block", "Conv2dBlock", "Conv2dResidual", "LayerActivation", "LayerActivationNormalization", "LayerActivationNormalizationDropout", "LayerActivationNormalizationUpsample", "LayerSkip", "LinearBlock", "PoolLayerActivationNormalization", "RecurrentBlock", "LogHistory", "RichProgressBar", "Add", "AddDict", "AttentionUNet", "CombineLayerActivation", "ConvolutionalDecoder2d", "ConvolutionalEncoder2d", "ConvolutionalEncoderDecoder2d", "ConvolutionalNeuralNetwork", "FromDict", "GraphConvolutionalNeuralNetwork", "IndexedPositionalEmbedding", "LayerDropoutSkipNormalization", "LearnableDistancewWeighting", "Max", "Mean", "MessagePassingNeuralNetwork", "Min", "MultiLayerPerceptron", "MultiheadSelfAttention", "PositionalEmbedding", "Prod", "RecurrentNeuralNetwork", "ResidualMessagePassingNeuralNetwork", "Sum", "Transform", "TransformPropagateUpdate", "TransformerEncoderLayer", "UNet2d", "Update", "WeightedSum", "dense_laplacian_normalization", "sparse_laplacian_normalization", "Callback", "after_build", "after_init", "before_build", "stateful", "Adam", "AdamW", "External", "Layer", "Optimizer", "RMSprop", "SGD", "Constant", "Kaiming", "Normal", "LayerList", "Parallel", "ReferringLayerList", "Sequential", "ExtendedConstructorMeta", "not_top_level", "BackboneResnet18", "CycleGANDiscriminator", "CycleGANResnetGenerator", "DCGANDiscriminator", "DCGANGenerator", "GlobalMeanPool", "GraphToEdgeMAGIK", "GraphToEdgeMPM", "GraphToGlobalMPM", "GraphToNodeMPM", "LargeMLP", "MPM", "MediumMLP", "RecurrentModel", "SmallMLP", "ViT", "XLargeMLP", "Config", "ConfigItem", "ConfigItemList", "DeeplayModule", "DetachedConfigItem", "Selection", "builder", "Add", "Cat", "Flatten", "FromLogs", "Lambda", "MergeOp", "MultiheadCrossAttention", "MultiheadSelfAttention", "Permute", "Reshape", "Squeeze", "Unsqueeze", "View", "Computed", "Variable", "reverse_two_operation", "two_operation", "unary_operation", "Trainer", "Deeplay documentation", "Documentation", "deeplay.activelearning Package", "deeplay.applications Package", "deeplay.blocks Package", "deeplay.callbacks Package", "deeplay.components Package", "deeplay.decorators Module", "deeplay.external Package", "deeplay.initializers Package", "deeplay.list Module", "deeplay.meta Module", "deeplay.models Package", "deeplay.module Module", "deeplay.ops Package", "deeplay.shapes Module", "deeplay.trainer Module"], "titleterms": {"activelearn": 137, "activelearningcriterion": 0, "activelearningdataset": 1, "adam": 76, "adamw": 77, "add": [39, 116], "adddict": 40, "addit": [43, 44, 46], "adversarialstrategi": 2, "after_build": 72, "after_init": 73, "applic": [16, 138], "attentionunet": 41, "attribut": 112, "backboneresnet18": 92, "baseresidu": 25, "before_build": 74, "binaryclassifi": 17, "block": [26, 139], "builder": 115, "callback": [71, 140], "cat": 117, "categoricalclassifi": 18, "class": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "classifi": 19, "combinelayeractiv": 42, "compon": 141, "comput": 129, "config": 109, "configitem": 110, "configitemlist": 111, "configur": [43, 44, 46, 56, 65, 98, 99, 100, 101, 103, 105, 107], "constant": [3, 83], "constraint": [40, 43, 44, 46, 95, 96, 97, 98, 99, 100, 101, 103, 107], "content": [135, 136], "conv2dblock": 27, "conv2dresidu": 28, "convolutionaldecoder2d": 43, "convolutionalencoder2d": 44, "convolutionalencoderdecoder2d": 45, "convolutionalneuralnetwork": 46, "cyclegandiscrimin": 93, "cycleganresnetgener": 94, "dcgandiscrimin": 95, "dcgangener": 96, "decor": 142, "deeplai": [135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "deeplaymodul": 112, "dense_laplacian_norm": 69, "detachedconfigitem": 113, "document": [135, 136], "entropi": 4, "evalu": [43, 44, 46, 56, 65], "exampl": [16, 26, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 130], "extendedconstructormeta": 90, "extern": [78, 143], "flatten": 118, "fractioncriterion": 5, "fromdict": 47, "fromlog": 119, "function": [142, 146, 148, 150], "globalmeanpool": 97, "graphconvolutionalneuralnetwork": 48, "graphtoedgemagik": 98, "graphtoedgempm": 99, "graphtoglobalmpm": 100, "graphtonodempm": 101, "indexedpositionalembed": 49, "initi": 144, "jointdataset": 6, "kaim": 84, "l1upper": 7, "l2upper": 8, "lambda": 120, "largemlp": 102, "layer": 79, "layeractiv": 29, "layeractivationnorm": 30, "layeractivationnormalizationdropout": 31, "layeractivationnormalizationupsampl": 32, "layerdropoutskipnorm": 50, "layerlist": 86, "layerskip": 33, "learnabledistancewweight": 51, "leastconfid": 9, "linearblock": 34, "list": 145, "lodestar": 20, "loghistori": 37, "margin": 10, "max": 52, "mean": 53, "mediummlp": 104, "mergeop": 121, "messagepassingneuralnetwork": 54, "meta": 146, "method": [105, 112], "min": 55, "model": 147, "modul": [142, 145, 146, 148, 150, 151], "mpm": 103, "multiheadcrossattent": 122, "multiheadselfattent": [57, 123], "multilabelclassifi": 21, "multilayerperceptron": 56, "normal": 85, "not_top_level": 91, "note": [43, 44, 46, 105], "op": 149, "optim": 80, "packag": [137, 138, 139, 140, 141, 143, 144, 147, 149], "parallel": 87, "paramet": [16, 20, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 93, 94, 95, 96, 98, 99, 100, 101, 103, 105, 107, 112, 114, 130], "permut": 124, "poollayeractivationnorm": 35, "positionalembed": 58, "prod": 59, "productcriterion": 11, "properti": 105, "rais": [26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "recurrentblock": 36, "recurrentmodel": 105, "recurrentneuralnetwork": 60, "referringlayerlist": 88, "regressor": 22, "reshap": 125, "residualmessagepassingneuralnetwork": 61, "return": [16, 43, 44, 46, 56, 65, 78, 93, 94, 95, 96, 107, 112, 114, 130], "reverse_two_oper": 131, "richprogressbar": 38, "rmsprop": 81, "select": 114, "sequenti": 89, "sgd": 82, "shape": 150, "shorthand": [56, 65, 94, 95, 96], "smallmlp": 106, "sparse_laplacian_norm": 70, "squeez": 126, "state": 75, "strategi": 12, "sum": 62, "sumcriterion": 13, "trainer": [134, 151], "transform": 63, "transformerencoderlay": 65, "transformpropagateupd": 64, "two_oper": 132, "unary_oper": 133, "uncertaintystrategi": 14, "unet2d": 66, "uniformstrategi": 15, "unsqueez": 127, "updat": 67, "usag": [16, 26, 29, 30, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 48, 50, 54, 56, 60, 61, 64, 65, 78, 79, 86, 94, 105, 112], "valu": [43, 44, 46, 56, 65, 93, 94, 95, 96, 107], "variabl": 130, "variationalautoencod": 23, "view": 128, "vit": 107, "wassersteinautoencod": 24, "weightedsum": 68, "xlargemlp": 108}})